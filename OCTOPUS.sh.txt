#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###
###  Copyright (C) 2010-2012 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: http://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### HOW-TO: run it with bash, not with sh  ###
###----------------------------------------###
###
### $ bash OCTOPUS.sh.txt
###


###----------------------------------------###
### EDITME                                 ###
###----------------------------------------###
###
### Enter below your valid e-mail address and
### the (sub)domain for this Aegir Satellite
### Instance, already pointing to your server.
### Define also your *new* Aegir user for this
### instance or existing if this is an upgrade
###
### NOTE: if this is an upgrade, it's enough
### to define the _USER value only, since
### _DOMAIN etc. will be auto-discovered
### and you can't override it here nor even
### in the /root/.$_USER.octopus.cnf file.
###
_USER=o1
_DOMAIN=$_USER.`uname -n`
_MY_EMAIL="noc@omega8.cc"
_CLIENT_EMAIL="notify@omega8.cc"
_CLIENT_OPTION=SSD
_CLIENT_SUBSCR=Y
_CLIENT_CORES=8


###----------------------------------------###
### EASY LOCALHOST MODE                    ###
###----------------------------------------###
###
### This option is available and enabled
### automatically only when Barracuda has been
### installed with option _EASY_LOCALHOST=YES
###
### It will automate/force only some of other
### Octopus configuration options, as listed
### below:
###
### _PHP_FPM_VERSION=5.3
### _PHP_CLI_VERSION=5.3
### _DEBUG_MODE=NO
### _AEGIR_VERSION=HEAD
### _DNS_SETUP_TEST=NO
### _THIS_DB_HOST=localhost
### _REMOTE_CACHE_IP=127.0.0.1
### _LOCAL_NETWORK_IP="127.0.1.1"
### _DOMAIN=$_USER.sub.aegir.local
###
### Thanks to local DNS wildcard, you will be
### able to use many levels of subdomains for
### created sites, for example:
### site.aegir.local, abc.xyz.site.aegir.local
### This wildcard will rely only on the local,
### basic DNS system, without any need to use
### external DNS.
###


###----------------------------------------###
### PHP-FPM VERSION                        ###
###----------------------------------------###
###
### You can choose PHP-FPM version per Aegir
### Satellite Instance - both on install and
### upgrade.
###
### Available options:
###
### _PHP_FPM_VERSION=5.2
### _PHP_FPM_VERSION=5.3
###
### Note that 5.3 will be forced automatically
### if you installed Barracuda with option
### _PHP_MODERN_ONLY=YES and there is no 5.2
### installed/available.
###
_PHP_FPM_VERSION=5.2


###----------------------------------------###
### PHP-CLI VERSION                        ###
###----------------------------------------###
###
### You can choose PHP-CLI version per Aegir
### Master and Satellite Instance - both on
### install and upgrade.
###
### Note that PHP-CLI 5.3 is required by
### Drupal 8.x, but breaks support for 5.x
###
### Available options:
###
### _PHP_CLI_VERSION=5.2
### _PHP_CLI_VERSION=5.3
###
### Note that 5.3 will be forced automatically
### if you installed Barracuda with option
### _PHP_MODERN_ONLY=YES and there is no 5.2
### installed/available.
###
_PHP_CLI_VERSION=5.2


###----------------------------------------###
### PLATFORMS INSTALL MODE                 ###
###----------------------------------------###
###
### You can use wildcard "ALL" to install all
### available platforms or configure the list
### of platforms to be installed as explained
### below.
###
### Note: the "ALL" wildcard is not default!
###
### When combined with _AUTOPILOT=YES option
### you can speed up the process and still
### control which platforms will be installed,
### using the symbols listed below.
###
### D8D ----------- Drupal 8 dev-tested
### D8E ----------- Drupal 8 dev-edge
### D7P D7S D7D --- Drupal 7 prod/stage/dev
### D6P D6S D6D --- Pressflow 6 p/s/d
### D5P ----------- Pressflow 5
### AQ6 ----------- Acquia D6
### CC3 ----------- CiviCRM 3.4.8 D6
### CC4 ----------- CiviCRM 4.2.1 D7
### CM6 ----------- CiviCRM 4.1.6 D6
### CM7 ----------- CiviCRM 4.1.6 D7
### COD ----------- Conference
### DCE ----------- Commerce
### DCS ----------- Commons
### ELS ----------- ELMS
### FSR ----------- Feature Server
### MNS ----------- Managing News
### MPG ----------- MartPlug
### NS7 ----------- NodeStream D7
### NSM ----------- NodeStream D6
### OAM ----------- Open Atrium
### OAY ----------- Open Academy
### OCH ----------- OpenChurch
### ODS ----------- Open Deals
### OEE ----------- Open Enterprise
### OOH ----------- Open Outreach
### OPC ----------- OpenPublic
### OPH ----------- OpenPublish
### OSR ----------- OpenScholar
### OVO ----------- Octopus Video
### PPT ----------- ProsePoint
### PPY ----------- Panopoly
### UC7 ----------- Ubercart D7
### UCT ----------- Ubercart D6
### VOA ----------- Videola
###
### Examples:
###
### _PLATFORMS_LIST=ALL
### _PLATFORMS_LIST="D7P D6P OAM MNS NS7 MPG"
###
_PLATFORMS_LIST="D7P D7S D7D D6P D6S D6D OAM"


###----------------------------------------###
### AUTOPILOT MODE                         ###
###----------------------------------------###
###
### To disable all Yes/no prompts and just run
### everything as-is, change this to YES.
###
### _AUTOPILOT=YES
###
_AUTOPILOT=NO


###----------------------------------------###
### UPGRADE MODE                           ###
###----------------------------------------###
###
### To upgrade Hostmaster without installing
### new platforms, change this to YES.
###
### Don't use this option for initial install.
###
### _HM_ONLY=YES
###
_HM_ONLY=NO


###----------------------------------------###
### O_CONTRIB UPGRADE                      ###
###----------------------------------------###
###
### To upgrade o_contrib modules in the latest
### and one previous platforms series 00x
### change this to YES.
###
### This option is available only on Aegir
### Satellite Instance upgrade.
###
### _O_CONTRIB_UP=YES
###
_O_CONTRIB_UP=NO


###----------------------------------------###
### DRUSH DEBUG MODE                       ###
###----------------------------------------###
###
### When set to YES it will run this Satellite
### Instance install/upgrade with -d option,
### displaying complete Drush backend report.
###
### _DEBUG_MODE=YES
###
_DEBUG_MODE=NO


###----------------------------------------###
### FORCED IP MODE                         ###
###----------------------------------------###
###
### To install or upgrade Aegir Satellite
### Instance on any non-default IP address
### available on your server/machine, please
### define it below. For default, main IP
### based install, leave this empty.
###
### _MY_OWNIP=123.45.67.89
###
_MY_OWNIP=""


###----------------------------------------###
### AEGIR BARRACUDA VERSION                ###
###----------------------------------------###
###
### By default latest release version will
### be installed. Please never use HEAD (dev)
### version on any production server.
### The HEAD can be occasionally broken
### and should be used **only** for testing!
###
### _AEGIR_VERSION=HEAD
### _AEGIR_VERSION=BOA-2.0.3
###
_AEGIR_VERSION=HEAD


###----------------------------------------###
### FORCE PREFERRED GIT REPOSITORY         ###
###----------------------------------------###
###
### Use this when you are experiencing issues
### trying to connect to the default github
### repository. Valid options:
###
### _FORCE_GIT_MIRROR=github
### _FORCE_GIT_MIRROR=drupal
### _FORCE_GIT_MIRROR=gitorious
###
### Note: with forced mirror the script will
### not try to connect and then switch to
### alternate mirror. It will simply fail
### if the forced mirror doesn't respond.
###
### We recommend github as it is much faster,
### often 10x than drupal and gitorious.
###
_FORCE_GIT_MIRROR=""


###----------------------------------------###
### DNS SETUP TEST                         ###
###----------------------------------------###
###
### If you don't want to test your DNS
### because of some custom local setup
### you know is correct (like DynDNS)
### but the script can't validate it with its
### standard ifconfig tests, set this to:
###
### _DNS_SETUP_TEST=NO
###
### There is no guarantee it will work.
###
_DNS_SETUP_TEST=YES


###----------------------------------------###
### DATABASE CUSTOM HOST                   ###
###----------------------------------------###
###
### If you prefer, you can set the database
### to be connected via FQDN pointing to your
### public IP instead of default "localhost".
###
### Note: the "FQDN" is a keyword.
### Don't replace it with a real hostname.
###
### For local or Amazon based installs with
### local/dynamic IP address it is recommended
### to use default "localhost" option.
###
### Available options:
###
### _THIS_DB_HOST=localhost
### _THIS_DB_HOST=FQDN
###
_THIS_DB_HOST=localhost


###----------------------------------------###
### DISTRO INITIAL VERSION NR              ###
###----------------------------------------###
###
### By default every new Aegir Satellite
### Instance will use shared code for its
### platforms, created during previous Aegir
### Satellite Instance install or upgrade,
### resulting with new 00x number in the
### /data/all directory.
###
### It is not always good, since you want
### to keep the code shared between instances,
### but you also don't want to create a new
### instance with outdated code if your last
### install/upgrade was performed a few months
### ago.
###
### If you don't want to build a new Aegir
### Satellite Instance with latest code, then
### leave it at default value. Otherwise
### change it to:
###
### _HOT_SAUCE=YES
###
_HOT_SAUCE=NO


###----------------------------------------###
### DISTRO USING EXISTING VERSION NR       ###
###----------------------------------------###
###
### We changed the default to YES to avoid
### creating many duplicated platforms on
### every Aegir Satellite Instance upgrade,
### when there is no new core, thus no reason
### to create newer platforms for the same
### distributions versions.
###
### It will also allow you to add some newer
### platforms to the existing shared code,
### which helps to keep your APC memory usage
### as low as possible without fragmentation.
###
### When set to _USE_CURRENT=NO it will force
### creating new set (with increased serial
### number) of *all* platforms on upgrade,
### so it is useful *only* when there is
### a newer Drupal core version released, or
### when newer Pressflow head includes some
### important fixes.
###
### Note: it will not work at all if you are
### using _HOT_SAUCE=YES above, because
### _HOT_SAUCE=YES forces new serial number
### both on install and upgrade.
###
_USE_CURRENT=YES


###----------------------------------------###
### REMOTE CACHE IP ADDRESS                ###
###----------------------------------------###
###
### Use this option only when you want to
### switch ALL your Aegir Satellite Instances
### along with your Aegir Master Instance
### from local Redis and Memcache servers
### to the remote caches in your network.
### It will also permanently disable your
### local instances of Redis and Memcache.
### By default your server localhost is used.
###
_REMOTE_CACHE_IP=127.0.0.1


###----------------------------------------###
### LOCALHOST ON LOCAL NETWORK             ###
###----------------------------------------###
###
### When enabled, it will force your Nginx web
### server to listen only on local IP:
###
### _LOCAL_NETWORK_IP=10.10.80.80
###
### This option is useful when your server is
### available only in your local network
### without any public IP address assigned/
### available on any eth interface. This also
### means it should work as a handy local
### setup on your wirelessly connected laptop
### or netbook, with improved DNS cache
### support - pdnsd will save results in file.
###
### In this case you could use 127.0.1.1 as
### _LOCAL_NETWORK_IP to avoid issues with
### DHCP changing your assigned IP on the fly
### and to avoid conflicts with some other
### services listening on 127.0.0.1
###
### This option works only with initial
### install and is disabled on upgrade.
###
### You should use this option only when you
### already used it with initial Barracuda
### install. It will override any defined
### above _MY_OWNIP value, disable DNS test
### and enable drush debug mode automatically.
###
_LOCAL_NETWORK_IP=""


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=BOA-2.0.4-dev

###
### Variables
###
_DRUSH_FAMILY=4
_DRUSH_VERSION=4.6-dev
_NOW=`date +%y%m%d-%H%M`
_PLATFORMS_ONLY=NO
_PURGE_FOR_SEVEN=YES
_SMALLCORE_6_LANG=6.26
_SMALLCORE6=6.26.2
_SMALLCORE7=7.15.2
_SMALLCORE8=8.0-dev
_SPINNER=YES
_TODAY=`date +%y%m%d`
_USRG=users
_WEBG=www-data
PATH=/usr/local/sbin:/usr/local/bin:/opt/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
SHELL=/bin/bash
if [ -n "${STY+x}" ]; then
  _SPINNER=NO
fi

###
### Distributions
###
_CIVICRM_M6=4.1.6
_CIVICRM_M7=4.1.6
_CIVICRM_PN=boa-2.0.4-dev
_CIVICRM6=3.4.8
_CIVICRM7=4.2.1
_COD=6.x-1.0-rc1
_COMMERCE=7.x-1.9
_COMMONS=6.x-2.9
_DRUPAL5=5.23.50
_DRUPAL7=drupal-7.15.2
_DRUPAL8="8.0-dev-120915"
_DRUPAL_EDGE_8="8.0-dev-$_TODAY-edge"
_ELMS=6.x-1.0-beta1
_MANAGINGNEWS=1.2.2
_MART_PLUG=1.0-b1b
_MARTPLUG=7.x-1.x-dev
_NODESTREAM6=6.x-1.5
_NODESTREAM7=7.x-2.0-beta1
_OCTOPUS_VIDEO=1.0-alpha6
_OPEN_DEALS=1.0-b11
_OPENACADEMY=7.x-1.0-beta3
_OPENATRIUM=6.x-1.5
_OPENCHURCH=7.x-1.10-alpha7
_OPENDEALS=7.x-1.0-beta11
_OPENENTERPRISE=7.x-1.0-rc3
_OPENOUTREACH=7.x-1.0-rc2
_OPENPUBLIC=beta3-build100
_OPENPUBLISH=7.x-1.0-beta2
_OPENSCHOLAR=2.0-rc1
_PANOPOLY=7.x-1.0-beta5
_PROSEPOINT=0.43
_UBER_CART_SEVEN=3.1.2
_UBERCART=2.9.2
_VIDEOLA=6.x-1.0-alpha3


###---### Functions
#
# Noticeable messages.
msg () {
  echo "Octopus [`date`] ==> $*"
}
# Simple prompt.
prompt_yes_no () {
if [ "$_AUTOPILOT" = "YES" ] ; then
  return 0
else
  while true ; do
    printf "$* [Y/n] "
    read answer
    if [ -z "$answer" ] ; then
      return 0
    fi
    case $answer in
      [Yy]|[Yy][Ee][Ss])
        return 0
        ;;
      [Nn]|[Nn][Oo])
        return 1
        ;;
      *)
        echo "Please answer yes or no"
        ;;
    esac
 done
fi
}
#
# Find correct IP.
find_correct_ip () {
  _FQDN_TEST=$(host $_LOC_DOM)
  if [[ "$_FQDN_TEST" =~ "is an alias for" ]] ; then
    _LOC_IP=`echo $_FQDN_TEST | cut -d: -f2 | awk '{ print $10}'`
  else
    _LOC_IP=`echo $_FQDN_TEST | cut -d: -f2 | awk '{ print $4}'`
  fi
}
#
# Read or create Octopus cnf file.
octopus_cnf () {
  if [ ! -e "/root/.$_USER.octopus.cnf" ] ; then
    if [[ "$_MY_EMAIL" =~ "omega8.cc" ]] || [[ "$_CLIENT_EMAIL" =~ "omega8.cc" ]] ; then
      _CHECK_HOST=`uname -n`
      if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] ; then
        true
      else
        msg "EXIT: You must enter **your** valid e-mail address"
        msg "EXIT: in the _MY_EMAIL **and** _CLIENT_EMAIL variables"
        exit 1
      fi
    fi
    if [ ! -x "/usr/local/bin/php" ] ; then
      _PHP_MODERN_ONLY=YES
    fi
    if [ "$_PHP_MODERN_ONLY" = "YES" ] ; then
      _PHP_FPM_VERSION=5.3
      _PHP_CLI_VERSION=5.3
    fi
    msg "INFO: Creating your /root/.$_USER.octopus.cnf config file"
    sleep 1
    echo "###" > /root/.$_USER.octopus.cnf
    echo "### Configuration created on $_NOW with" >> /root/.$_USER.octopus.cnf
    echo "### Octopus version $_INSTALLER_VERSION" >> /root/.$_USER.octopus.cnf
    echo "###" >> /root/.$_USER.octopus.cnf
    echo "### NOTE: the group of settings displayed bellow" >> /root/.$_USER.octopus.cnf
    echo "### will *override* all listed settings in the Octopus script." >> /root/.$_USER.octopus.cnf
    echo "###" >> /root/.$_USER.octopus.cnf
    echo "_USER=\"$_USER\"" >> /root/.$_USER.octopus.cnf
    echo "_MY_EMAIL=\"$_MY_EMAIL\"" >> /root/.$_USER.octopus.cnf
    echo "_PLATFORMS_LIST=\"$_PLATFORMS_LIST\"" >> /root/.$_USER.octopus.cnf
    echo "_AUTOPILOT=$_AUTOPILOT" >> /root/.$_USER.octopus.cnf
    echo "_HM_ONLY=$_HM_ONLY" >> /root/.$_USER.octopus.cnf
    echo "_O_CONTRIB_UP=$_O_CONTRIB_UP" >> /root/.$_USER.octopus.cnf
    echo "_DEBUG_MODE=$_DEBUG_MODE" >> /root/.$_USER.octopus.cnf
    echo "_MY_OWNIP=$_MY_OWNIP" >> /root/.$_USER.octopus.cnf
    echo "_FORCE_GIT_MIRROR=\"$_FORCE_GIT_MIRROR\"" >> /root/.$_USER.octopus.cnf
    echo "_THIS_DB_HOST=$_THIS_DB_HOST" >> /root/.$_USER.octopus.cnf
    echo "_DNS_SETUP_TEST=$_DNS_SETUP_TEST" >> /root/.$_USER.octopus.cnf
    echo "_HOT_SAUCE=$_HOT_SAUCE" >> /root/.$_USER.octopus.cnf
    echo "_USE_CURRENT=$_USE_CURRENT" >> /root/.$_USER.octopus.cnf
    echo "_REMOTE_CACHE_IP=$_REMOTE_CACHE_IP" >> /root/.$_USER.octopus.cnf
    echo "_LOCAL_NETWORK_IP=$_LOCAL_NETWORK_IP" >> /root/.$_USER.octopus.cnf
    echo "_PHP_FPM_VERSION=$_PHP_FPM_VERSION" >> /root/.$_USER.octopus.cnf
    echo "_PHP_CLI_VERSION=$_PHP_CLI_VERSION" >> /root/.$_USER.octopus.cnf
    echo "###" >> /root/.$_USER.octopus.cnf
    echo "### NOTE: the group of settings displayed bellow will be *overriden*" >> /root/.$_USER.octopus.cnf
    echo "### by config files stored in the /data/disk/$_USER/log/ directory," >> /root/.$_USER.octopus.cnf
    echo "### but only on upgrade." >> /root/.$_USER.octopus.cnf
    echo "###" >> /root/.$_USER.octopus.cnf
    echo "_DOMAIN=\"$_DOMAIN\"" >> /root/.$_USER.octopus.cnf
    echo "_CLIENT_EMAIL=\"$_CLIENT_EMAIL\"" >> /root/.$_USER.octopus.cnf
    echo "_CLIENT_OPTION=\"$_CLIENT_OPTION\"" >> /root/.$_USER.octopus.cnf
    echo "_CLIENT_SUBSCR=\"$_CLIENT_SUBSCR\"" >> /root/.$_USER.octopus.cnf
    echo "_CLIENT_CORES=\"$_CLIENT_CORES\"" >> /root/.$_USER.octopus.cnf
    echo "###" >> /root/.$_USER.octopus.cnf
    echo "### Configuration created on $_NOW with" >> /root/.$_USER.octopus.cnf
    echo "### Octopus version $_INSTALLER_VERSION" >> /root/.$_USER.octopus.cnf
    echo "###" >> /root/.$_USER.octopus.cnf
  else
    msg "INFO: Reading your /root/.$_USER.octopus.cnf config file"
    sleep 1
    if [[ "$_DOMAIN" =~ ".host8." ]] ; then
      _LD_DOM=YES
    else
      _LD_DOM=NO
    fi
    if [ ! -x "/usr/local/bin/php" ] ; then
      _PHP_MODERN_ONLY=YES
    fi
    if [ "$_PHP_MODERN_ONLY" = "YES" ] && [ "$_LD_DOM" = "NO" ] ; then
      _PHP_FPM_VERSION=5.3
      _PHP_CLI_VERSION=5.3
    fi
    if [ -e "/data/disk/$_USER/log/fpm.txt" ] && [ "$_LD_DOM" = "YES" ] ; then
      _PHP_FPM_VERSION=`cat /data/disk/$_USER/log/fpm.txt`
      _PHP_FPM_VERSION=`echo -n $_PHP_FPM_VERSION | tr -d "\n"`
    fi
    if [ -e "/data/disk/$_USER/log/cli.txt" ] && [ "$_LD_DOM" = "YES" ] ; then
      _PHP_CLI_VERSION=`cat /data/disk/$_USER/log/cli.txt`
      _PHP_CLI_VERSION=`echo -n $_PHP_CLI_VERSION | tr -d "\n"`
    fi
    _PHP_FPM_VERSION_TEST=$(grep _PHP_FPM_VERSION /root/.$_USER.octopus.cnf)
    if [[ "$_PHP_FPM_VERSION_TEST" =~ "_PHP_FPM_VERSION" ]] ; then
      if [ "$_PHP_MODERN_ONLY" = "YES" ] && [ "$_LD_DOM" = "NO" ] ; then
        sed -i "s/.*_PHP_FPM_VERSION.*/_PHP_FPM_VERSION=5.3/g" /root/.$_USER.octopus.cnf &> /dev/null
        echo 5.3 > /data/disk/$_USER/log/fpm.txt
      fi
    else
      echo "_PHP_FPM_VERSION=$_PHP_FPM_VERSION" >> /root/.$_USER.octopus.cnf
    fi
    _PHP_CLI_VERSION_TEST=$(grep _PHP_CLI_VERSION /root/.$_USER.octopus.cnf)
    if [[ "$_PHP_CLI_VERSION_TEST" =~ "_PHP_CLI_VERSION" ]] ; then
      if [ "$_PHP_MODERN_ONLY" = "YES" ] && [ "$_LD_DOM" = "NO" ] ; then
        sed -i "s/.*_PHP_CLI_VERSION.*/_PHP_CLI_VERSION=5.3/g" /root/.$_USER.octopus.cnf &> /dev/null
        echo 5.3 > /data/disk/$_USER/log/cli.txt
      fi
    else
      echo "_PHP_CLI_VERSION=$_PHP_CLI_VERSION" >> /root/.$_USER.octopus.cnf
    fi
    msg "NOTE! Please review all config options displayed below"
    sleep 3
    echo " "
    while read line ; do
      echo "$line"
    done < /root/.$_USER.octopus.cnf
    echo " "
    source /root/.$_USER.octopus.cnf
    if [[ "$_MY_EMAIL" =~ "omega8.cc" ]] ; then
      _CHECK_HOST=`uname -n`
      if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] ; then
        true
      else
        msg "EXIT: You must enter **your** valid e-mail address in the _MY_EMAIL variable"
        msg "EXIT: stored in the /root/.$_USER.octopus.cnf config file"
        exit 1
      fi
    fi
    if [ ! -x "/usr/local/bin/php" ] ; then
      _PHP_FPM_VERSION=5.3
      _PHP_CLI_VERSION=5.3
    fi
    if [ "$_STATUS" = "INIT" ] ; then
      if prompt_yes_no "Do you want to proceed with the install?" ; then
        true
      else
        echo "Installation aborted by you"
        exit 1
      fi
    else
      if prompt_yes_no "Do you want to proceed with the upgrade?" ; then
        true
      else
        echo "Upgrade aborted by you"
        exit 1
      fi
    fi
  fi
}
#
# Sub Force advanced Nginx configuration.
sub_force_advanced_nginx_config_main () {
  if [ -d "$_THIS_NGX_PATH" ] ; then
    sed -i "s/EDIT_USER/$_USER/g"  $_THIS_NGX_PATH/nginx_octopus_include.conf  &> /dev/null
    sed -i "s/EDIT_USER/$_USER/g"  $_THIS_NGX_PATH/nginx_modern_include.conf   &> /dev/null
    sed -i "s/EDIT_USER/$_USER/g"  $_THIS_NGX_PATH/nginx_legacy_include.conf   &> /dev/null
    sed -i "s/Barracuda 1.0 E/Octopus 1.0 E/g"  $_THIS_NGX_PATH/nginx_octopus_include.conf  &> /dev/null
    sed -i "s/Barracuda 1.0 E/Octopus 1.0 E/g"  $_THIS_NGX_PATH/nginx_modern_include.conf   &> /dev/null
    sed -i "s/Barracuda 1.0 E/Octopus 1.0 E/g"  $_THIS_NGX_PATH/nginx_legacy_include.conf   &> /dev/null
    if [ "$_PHP_FPM_VERSION" = "5.3" ] && [ -e "/opt/local/etc/php53-fpm.conf" ] ; then
      sed -i "s/127.0.0.1:9000/127.0.0.1:9090/g" $_THIS_NGX_PATH/nginx_octopus_include.conf &> /dev/null
    fi
  fi
}
#
# Force advanced Nginx configuration.
force_advanced_nginx_config_main () {
  _THIS_NGX_PATH=/data/disk/$_USER/.drush/provision/http/Provision/Service/http
  sub_force_advanced_nginx_config_main
  _THIS_NGX_PATH=/data/disk/$_USER/config/includes
  sub_force_advanced_nginx_config_main
  if [ -e "/data/disk/$_USER/config/includes" ] ; then
    if [ ! -L "/data/disk/$_USER/config/includes/nginx_advanced_include.conf" ] ; then
      rm -f /data/disk/$_USER/config/includes/nginx_advanced_include.conf
      ln -s /data/disk/$_USER/config/includes/nginx_octopus_include.conf /data/disk/$_USER/config/includes/nginx_advanced_include.conf
    fi
    if [ ! -L "/data/disk/$_USER/config/includes/nginx_simple_include.conf" ] ; then
      rm -f /data/disk/$_USER/config/includes/nginx_simple_include.conf
      ln -s /data/disk/$_USER/config/includes/nginx_legacy_include.conf /data/disk/$_USER/config/includes/nginx_simple_include.conf
    fi
  fi
}
#
#
###---### action
#
action () {
_REL_VERSION=`lsb_release -sc`
_AWS_TEST_A=$(grep cloudimg /etc/fstab)
_AWS_TEST_B=$(grep cloudconfig /etc/fstab)
if [ "$_REL_VERSION" = "oneiric" ] || [ "$_REL_VERSION" = "precise" ] ; then
  _THIS_DB_HOST=localhost
fi
if [[ "$_AWS_TEST_A" =~ "cloudimg" ]] || [[ "$_AWS_TEST_B" =~ "cloudconfig" ]] ; then
  _VMFAMILY="AWS"
  _THIS_DB_HOST=localhost
  _LOC_DOM="$_DOMAIN"
  find_correct_ip
  _MY_OWNIP="$_LOC_IP"
fi
if [ -d "/data/all/000" ] ; then
  if [ ! -e "/data/all/000/core.$_SMALLCORE6.txt" ] && [ ! -e "/data/all/000/core.$_SMALLCORE7.txt" ] ; then
    _USE_CURRENT=NO
    _HOT_SAUCE=YES
    _HM_ONLY=NO
  fi
fi
for Files in `find /opt/tmp/$_BOA_REPO_NAME/aegir/scripts -type f`
do
  sed -i "s/EDIT_AEGIR_VERSION/$_AEGIR_VERSION/g"         $Files
  sed -i "s/EDIT_ALL_DISTRO/$_ALL_DISTRO/g"               $Files
  sed -i "s/EDIT_AUTOPILOT/$_AUTOPILOT/g"                 $Files
  sed -i "s/EDIT_BOA_REPO_GIT_URL/$_BOA_REPO_GIT_URLX/g"  $Files
  sed -i "s/EDIT_BOA_REPO_NAME/$_BOA_REPO_NAME/g"         $Files
  sed -i "s/EDIT_CIVICRM_M6/$_CIVICRM_M6/g"               $Files
  sed -i "s/EDIT_CIVICRM_M7/$_CIVICRM_M7/g"               $Files
  sed -i "s/EDIT_CIVICRM_PN/$_CIVICRM_PN/g"               $Files
  sed -i "s/EDIT_CIVICRM6/$_CIVICRM6/g"                   $Files
  sed -i "s/EDIT_CIVICRM7/$_CIVICRM7/g"                   $Files
  sed -i "s/EDIT_CLIENT_CORES/$_CLIENT_CORES/g"           $Files
  sed -i "s/EDIT_CLIENT_EMAIL/$_CLIENT_EMAIL/g"           $Files
  sed -i "s/EDIT_CLIENT_OPTION/$_CLIENT_OPTION/g"         $Files
  sed -i "s/EDIT_COD/$_COD/g"                             $Files
  sed -i "s/EDIT_COMMERCE/$_COMMERCE/g"                   $Files
  sed -i "s/EDIT_COMMONS/$_COMMONS/g"                     $Files
  sed -i "s/EDIT_DEBUG_MODE/$_DEBUG_MODE/g"               $Files
  sed -i "s/EDIT_DISTRO/$_DISTRO/g"                       $Files
  sed -i "s/EDIT_DOMAIN/$_DOMAIN/g"                       $Files
  sed -i "s/EDIT_DRUPAL5/$_DRUPAL5/g"                     $Files
  sed -i "s/EDIT_DRUPAL7/$_DRUPAL7/g"                     $Files
  sed -i "s/EDIT_DRUPAL8/$_DRUPAL8/g"                     $Files
  sed -i "s/EDIT_DRUPAL_EDGE_8/$_DRUPAL_EDGE_8/g"         $Files
  sed -i "s/EDIT_DRUSH_FAMILY/$_DRUSH_FAMILY/g"           $Files
  sed -i "s/EDIT_DRUSH_VERSION/$_DRUSH_VERSION/g"         $Files
  sed -i "s/EDIT_ELMS/$_ELMS/g"                           $Files
  sed -i "s/EDIT_HM_DISTRO/$_HM_DISTRO/g"                 $Files
  sed -i "s/EDIT_HM_ONLY/$_HM_ONLY/g"                     $Files
  sed -i "s/EDIT_HOT_SAUCE/$_HOT_SAUCE/g"                 $Files
  sed -i "s/EDIT_HTTP_WILDCARD/$_HTTP_WILDCARD/g"         $Files
  sed -i "s/EDIT_INSTALLER_VERSION/$_INSTALLER_VERSION/g" $Files
  sed -i "s/EDIT_LAST_ALL/$_LAST_ALL/g"                   $Files
  sed -i "s/EDIT_LAST_HMR/$_LAST_HMR/g"                   $Files
  sed -i "s/EDIT_LASTNUM/$_LASTNUM/g"                     $Files
  sed -i "s/EDIT_MANAGINGNEWS/$_MANAGINGNEWS/g"           $Files
  sed -i "s/EDIT_MART_PLUG/$_MART_PLUG/g"                 $Files
  sed -i "s/EDIT_MARTPLUG/$_MARTPLUG/g"                   $Files
  sed -i "s/EDIT_MY_EMAIL/$_MY_EMAIL/g"                   $Files
  sed -i "s/EDIT_NODESTREAM6/$_NODESTREAM6/g"             $Files
  sed -i "s/EDIT_NODESTREAM7/$_NODESTREAM7/g"             $Files
  sed -i "s/EDIT_NOW/$_NOW/g"                             $Files
  sed -i "s/EDIT_O_CONTRIB_UP/$_O_CONTRIB_UP/g"           $Files
  sed -i "s/EDIT_OCTOPUS_VIDEO/$_OCTOPUS_VIDEO/g"         $Files
  sed -i "s/EDIT_OPEN_DEALS/$_OPEN_DEALS/g"               $Files
  sed -i "s/EDIT_OPENACADEMY/$_OPENACADEMY/g"             $Files
  sed -i "s/EDIT_OPENATRIUM/$_OPENATRIUM/g"               $Files
  sed -i "s/EDIT_OPENCHURCH/$_OPENCHURCH/g"               $Files
  sed -i "s/EDIT_OPENDEALS/$_OPENDEALS/g"                 $Files
  sed -i "s/EDIT_OPENENTERPRISE/$_OPENENTERPRISE/g"       $Files
  sed -i "s/EDIT_OPENOUTREACH/$_OPENOUTREACH/g"           $Files
  sed -i "s/EDIT_OPENPUBLIC/$_OPENPUBLIC/g"               $Files
  sed -i "s/EDIT_OPENPUBLISH/$_OPENPUBLISH/g"             $Files
  sed -i "s/EDIT_OPENSCHOLAR/$_OPENSCHOLAR/g"             $Files
  sed -i "s/EDIT_PANOPOLY/$_PANOPOLY/g"                   $Files
  sed -i "s/EDIT_PHP_CLI_VERSION/$_PHP_CLI_VERSION/g"     $Files
  sed -i "s/EDIT_PHP_FPM_VERSION/$_PHP_FPM_VERSION/g"     $Files
  sed -i "s/EDIT_PHP_MODERN_ONLY/$_PHP_MODERN_ONLY/g"     $Files
  sed -i "s/EDIT_PLATFORMS_LIST/$_PLATFORMS_LIST/g"       $Files
  sed -i "s/EDIT_PLATFORMS_ONLY/$_PLATFORMS_ONLY/g"       $Files
  sed -i "s/EDIT_PROSEPOINT/$_PROSEPOINT/g"               $Files
  sed -i "s/EDIT_PURGE_FOR_SEVEN/$_PURGE_FOR_SEVEN/g"     $Files
  sed -i "s/EDIT_PURGE_MODE/$_PURGE_MODE/g"               $Files
  sed -i "s/EDIT_REMOTE_CACHE_IP/$_REMOTE_CACHE_IP/g"     $Files
  sed -i "s/EDIT_SMALLCORE_6_LANG/$_SMALLCORE_6_LANG/g"   $Files
  sed -i "s/EDIT_SMALLCORE6/$_SMALLCORE6/g"               $Files
  sed -i "s/EDIT_SMALLCORE7/$_SMALLCORE7/g"               $Files
  sed -i "s/EDIT_SMALLCORE8/$_SMALLCORE8/g"               $Files
  sed -i "s/EDIT_SPINNER/$_SPINNER/g"                     $Files
  sed -i "s/EDIT_THIS_DB_HOST/$_THIS_DB_HOST/g"           $Files
  sed -i "s/EDIT_THISHTIP/$_THISHTIP/g"                   $Files
  sed -i "s/EDIT_UBER_CART_SEVEN/$_UBER_CART_SEVEN/g"     $Files
  sed -i "s/EDIT_UBERCART/$_UBERCART/g"                   $Files
  sed -i "s/EDIT_USE_CURRENT/$_USE_CURRENT/g"             $Files
  sed -i "s/EDIT_USER/$_USER/g"                           $Files
  sed -i "s/EDIT_USRG/$_USRG/g"                           $Files
  sed -i "s/EDIT_VIDEOLA/$_VIDEOLA/g"                     $Files
  sed -i "s/EDIT_WEBG/$_WEBG/g"                           $Files
done
_THISHOST=`cat /etc/hostname`
_THISHOST=`echo -n $_THISHOST | tr -d "\n"`
if [ -e "/usr/bin/sipcalc" ] ; then
  if [ -z "$_THISHTIP" ] ; then
    _LOC_DOM="$_THISHOST"
    find_correct_ip
    _THISHTIP="$_LOC_IP"
  fi
  _IP_TEST=`sipcalc $_THISHTIP 2>&1`
  if [[ "$_IP_TEST" =~ "ERR" ]] ; then
    _IP_TEST_RESULT=FAIL
    _LOCAL_THISHTIP=all
  else
    _IP_TEST_RESULT=OK
    _LOCAL_THISHTIP="$_THISHTIP"
  fi
else
  _LOCAL_THISHTIP="$_THISHTIP"
fi
if [ -z "$_LOCAL_THISHTIP" ] ; then
  _LOC_DOM="$_THISHOST"
  find_correct_ip
  _LOCAL_THISHTIP="$_LOC_IP"
fi
if [ -z "$_LOCAL_THISHTIP" ] ; then
  _LOCAL_THISHTIP=all
fi
if [ "$_STATUS" = "INIT" ] ; then
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/scripts/run-xdrago /var/xdrago/run-$_USER &> /dev/null
  chmod 700 /var/xdrago/run-$_USER &> /dev/null
else
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/scripts/run-xdrago /var/xdrago/run-$_USER &> /dev/null
  chmod 700 /var/xdrago/run-$_USER &> /dev/null
fi
force_advanced_nginx_config_main
chmod 700 /opt/tmp/$_BOA_REPO_NAME/aegir/scripts/* &> /dev/null
bash /opt/tmp/$_BOA_REPO_NAME/aegir/scripts/AegirSetupA.sh.txt
if [ -e "/opt/tmp/status-AegirSetupA-FAIL" ] ; then
  msg "FATAL ERROR: AegirSetupA installer failed"
  msg "FATAL ERROR: Aborting Octopus installer NOW!"
  touch /opt/tmp/status-Octopus-FAIL
  exit 1
fi
force_advanced_nginx_config_main
if [ ! -e "/data/disk/$_USER/log/email.txt" ] ; then
  echo $_CLIENT_EMAIL > /data/disk/$_USER/log/email.txt
fi
if [ ! -e "/data/disk/$_USER/log/option.txt" ] ; then
  echo $_CLIENT_OPTION > /data/disk/$_USER/log/option.txt
fi
if [ ! -e "/data/disk/$_USER/log/cores.txt" ] ; then
  echo $_CLIENT_CORES > /data/disk/$_USER/log/cores.txt
fi
if [ ! -e "/data/disk/$_USER/log/subscr.txt" ] ; then
  echo $_CLIENT_SUBSCR > /data/disk/$_USER/log/subscr.txt
fi
if [ ! -e "/data/disk/$_USER/log/fpm.txt" ] ; then
  echo $_PHP_FPM_VERSION > /data/disk/$_USER/log/fpm.txt
fi
if [ ! -e "/data/disk/$_USER/log/cli.txt" ] ; then
  echo $_PHP_CLI_VERSION > /data/disk/$_USER/log/cli.txt
fi
rm -f -r /opt/tmp/$_BOA_REPO_NAME
if [ -d "/data/all/000" ] ; then
  if [ ! -e "/data/all/000/core.$_SMALLCORE6.txt" ] && [ ! -e "/data/all/000/core.$_SMALLCORE7.txt" ] ; then
    echo "$_SMALLCORE6" > /data/all/000/core.$_SMALLCORE6.txt
    echo "$_SMALLCORE7" > /data/all/000/core.$_SMALLCORE7.txt
  fi
fi
}


###--------------------###
if ! netcat -w 8 -z ftp.drupal.org 80 ; then
  echo " "
  msg "EXIT on error due to ftp.drupal.org downtime"
  msg "Please try to run this script again in a few minutes"
  msg "or better yet, hours"
  msg "Bye"
  exit 1
fi
if ! netcat -w 8 -z github.com 9418 ; then
  echo " "
  msg "EXIT on error due to GitHub git server at 9418 downtime"
  msg "Please try to run this script again in a few minutes"
  msg "Also, make sure that the git port 9418 is open"
  msg "Bye"
  exit 1
fi
if [ ! -e "/var/run/mysqld/mysqld.pid" ] || [ ! -e "/var/run/mysqld/mysqld.sock" ] ; then
  _DB_SERVER_TEST=`mysql -V 2>&1`
  if [[ "$_DB_SERVER_TEST" =~ "MariaDB" ]] ; then
    _DB_SERVER=MariaDB
  else
    _DB_SERVER=Percona
  fi
  msg "ALRT: $_DB_SERVER server not running!"
  msg "EXIT: We can't proceed and will exit now"
  msg "HINT: Please start $_DB_SERVER server and then run Octopus installer again"
  msg "Bye"
  exit 1
fi


###---### init
#
touch /var/run/boa_run.pid
if [ -d "/var/cache/pdnsd" ] ; then
  service pdnsd stop &> /dev/null
  sleep 1
  rm -f /var/cache/pdnsd/pdnsd.cache
  sleep 1
  service pdnsd start &> /dev/null
fi
#
# Sanitize _USER
  _USER=${_USER//[^a-zA-Z0-9-.]/}
  _USER=`echo -n $_USER | tr A-Z a-z`
  _ROOT="/data/disk/$_USER"
  echo " "
  msg "BOA Skynet welcomes you aboard!"
  echo " "
  sleep 3
#
#
_THIS_HOST=`uname -n`
if [ $_THIS_HOST = "aegir.local" ] && [ ! -d "$_ROOT" ] ; then
  _PHP_FPM_VERSION=5.3
  _PHP_CLI_VERSION=5.3
  _AEGIR_VERSION=HEAD
  _DEBUG_MODE=NO
  _DNS_SETUP_TEST=NO
  _THIS_DB_HOST=localhost
  _REMOTE_CACHE_IP=127.0.0.1
  _DOMAIN="$_USER.sub.aegir.local"
  _LOCAL_NETWORK_IP="127.0.1.1"
  _MY_OWNIP="$_LOCAL_NETWORK_IP"
  msg "_LOCAL_NETWORK_IP is $_LOCAL_NETWORK_IP"
fi
#
# Sanitize _DOMAIN
  _DOMAIN=${_DOMAIN//[^a-zA-Z0-9-.]/}
  _DOMAIN=`echo -n $_DOMAIN | tr A-Z a-z`
#
#
if [[ "$_DOMAIN" =~ ".xhost8." ]] ; then
  true
else
  octopus_cnf
fi
#
#
if [ ! -z "$_LOCAL_NETWORK_IP" ] && [ $_THIS_HOST != "aegir.local" ] ; then
  _DNS_SETUP_TEST=NO
  _DEBUG_MODE=YES
  _MY_OWNIP="$_LOCAL_NETWORK_IP"
fi
#
#
###--------------------###
_GITHUB_WORKS=NO
_DRUPAL_WORKS=NO
_GITORIOUS_WORKS=NO
if [ "$_FORCE_GIT_MIRROR" = "github" ] ; then
  msg "INFO: We will use forced GitHub mirror without testing connection"
  _GITHUB_WORKS=YES
  _DRUPAL_WORKS=NO
  _GITORIOUS_WORKS=NO
  sleep 1
elif [ "$_FORCE_GIT_MIRROR" = "drupal" ] ; then
  msg "INFO: We will use forced Drupal repository without testing connection"
  _GITHUB_WORKS=NO
  _DRUPAL_WORKS=YES
  _GITORIOUS_WORKS=NO
  sleep 1
elif [ "$_FORCE_GIT_MIRROR" = "gitorious" ] ; then
  msg "INFO: We will use forced Gitorious mirror without testing connection"
  _GITHUB_WORKS=NO
  _DRUPAL_WORKS=NO
  _GITORIOUS_WORKS=YES
  sleep 1
else
  msg "INFO: Testing GitHub, Drupal and Gitorious servers availability, please wait..."
  sleep 1
  _GITHUB_WORKS=YES
  _DRUPAL_WORKS=YES
  _GITORIOUS_WORKS=YES
  if ! netcat -w 8 -z github.com 9418 ; then
    _GITHUB_WORKS=NO
    msg "WARN: The GitHub mirror repository server doesn't respond..."
  elif ! netcat -w 8 -z git.drupal.org 80 ; then
    _DRUPAL_WORKS=NO
    msg "WARN: The Drupal master repository server doesn't respond..."
  elif ! netcat -w 8 -z code.aegir.cc 9418 ; then
    _GITORIOUS_WORKS=NO
    msg "WARN: The Gitorious mirror repository server doesn't respond..."
  fi
fi
if [ "$_GITHUB_WORKS" = "YES" ] ; then
  _BOA_REPO_NAME="nginx-for-drupal"
  _BOA_REPO_GIT_URL="git://github.com/omega8cc"
  msg "INFO: GitHub mirror repository will be used for this install"
elif [ "$_DRUPAL_WORKS" = "YES" ] ; then
  _BOA_REPO_NAME="barracuda"
  _BOA_REPO_GIT_URL="http://git.drupal.org/project"
  msg "INFO: Drupal master repository will be used for this install"
elif [ "$_GITORIOUS_WORKS" = "YES" ] ; then
  _BOA_REPO_NAME="barracuda-octopus"
  _BOA_REPO_GIT_URL="git://code.aegir.cc/aegir"
  msg "INFO: Gitorious mirror repository will be used for this install"
else
  cat <<EOF

  None of repository servers responded in 8 seconds,
  so we can't continue this installation.

  Please try again later or check if your firewall has port 9418 open.

  Bye.

EOF
  exit 1
fi
_BOA_REPO_GIT_URLX=${_BOA_REPO_GIT_URL//\//\\\/}
#
#
if [ `whoami` = "root" ] ; then
  true
else
  msg "ERROR: This script should be ran as a root user - please `sudo -i` first"
  msg "Bye"
  exit 1
fi
#
#
if [ ! -f "/var/aegir/config/includes/barracuda_log.txt" ] ; then
  msg "ERROR: This script should be used only when the same version of BARRACUDA was used before"
  msg "Your system has to be configured/upgraded by BARRACUDA version $_INSTALLER_VERSION first"
  msg "Bye"
  exit 1
else
  _VERSIONS_TEST=`cat /var/aegir/config/includes/barracuda_log.txt`
  if [[ "$_VERSIONS_TEST" =~ "$_INSTALLER_VERSION" ]] ; then
    _VERSIONS_TEST_RESULT=OK
  else
    msg "ERROR: This script should be used only when the same version of BARRACUDA was used before"
    msg "Your system has to be configured/upgraded by BARRACUDA version $_INSTALLER_VERSION first"
    msg "Bye"
    exit 1
  fi
fi
#
#
rm -f /var/run/aegir_upgrade.pid
rm -f /opt/tmp/testecho*
_SRCDIR=/opt/tmp/files
mkdir -p $_SRCDIR
chmod -R 777 /opt/tmp &> /dev/null
cd /opt/tmp
rm -f -r /opt/tmp/$_BOA_REPO_NAME
if [ "$_AEGIR_VERSION" = "HEAD" ] ; then
  git clone $_BOA_REPO_GIT_URL/$_BOA_REPO_NAME.git &> /dev/null
  if [ "$_FORCE_GIT_MIRROR" = "gitorious" ] ; then
    cd /opt/tmp/$_BOA_REPO_NAME
    git checkout 2.0.4-dev &> /dev/null
    cd /opt/tmp
  fi
else
  wget -q -U iCab http://files.aegir.cc/versions/nginx-for-drupal-$_AEGIR_VERSION.tar.gz
  gunzip -q -c nginx-for-drupal-$_AEGIR_VERSION.tar.gz | tar -xf -
  rm -f nginx-for-drupal-$_AEGIR_VERSION.tar.gz
  _BOA_REPO_NAME="nginx-for-drupal"
fi
if [ ! -e "/opt/tmp/$_BOA_REPO_NAME/aegir/helpers/apt.conf.noninteractive" ] ; then
  echo " "
  msg "EXIT on error due to missing helpers"
  msg "Please try to run this script again in a few minutes"
  msg "Also, make sure that the git port 9418 is open"
  msg "Bye"
  exit 1
fi
#
# Get spinner
cd $_SRCDIR
rm -f spinner*
cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/spinner ./
chmod +x spinner &> /dev/null
#
# Create tmp stuff
_LOG=/var/backups/octopus-$_USER-$_NOW.log
touch $_LOG
chmod 646 $_LOG
_SILENT=/opt/tmp/silent.log
#
#
_LASTNUM=001
_LAST_HMR=001
_LAST_ALL=001
_DISTRO=001
_HM_DISTRO=001
_ALL_DISTRO=001
_STATUS=INIT
#
#
if [ -d "$_ROOT" ] ; then
  _STATUS=UPGRADE
  msg "UPGRADE in progress..."
  if [ -d "$_ROOT/distro" ] ; then
    #msg "UPGRADE v.2 in progress..."
    if [ -e "$_ROOT/log/domain.txt" ] ; then
      _DOMAIN=`cat $_ROOT/log/domain.txt`
      _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
    fi
    if [ -z "$_DOMAIN" ] ; then
      msg "ALERT! _DOMAIN is e-m-p-t-y, exit now"
      exit 1
    fi
    if [ -z "$_USER" ] ; then
      msg "ALERT! _USER is e-m-p-t-y, exit now"
      exit 1
    fi
    #msg "_DOMAIN is $_DOMAIN"
    _CHECK_HOST=`uname -n`
    if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] ; then
      if [ -e "/data/disk/$_USER/log/amazing_upgrade.txt" ] && [ ! -e "/data/disk/$_USER/log/amazing_upgrade_complete.txt" ] ; then
        if [ -e "/data/disk/$_USER/log/original_option.txt" ] ; then
          cp -af /data/disk/$_USER/log/option.txt /data/disk/$_USER/log/prev_option.txt
          cp -af /data/disk/$_USER/log/original_option.txt /data/disk/$_USER/log/option.txt
        fi
        if [ -e "/data/disk/$_USER/log/original_cores.txt" ] ; then
          cp -af /data/disk/$_USER/log/cores.txt /data/disk/$_USER/log/prev_cores.txt
          cp -af /data/disk/$_USER/log/original_cores.txt /data/disk/$_USER/log/cores.txt
        fi
        echo completed > /data/disk/$_USER/log/amazing_upgrade_complete.txt
      fi
    fi
    if [ -e "/data/disk/$_USER/log/option.txt" ] ; then
      _CLIENT_OPTION=`cat /data/disk/$_USER/log/option.txt`
      _CLIENT_OPTION=`echo -n $_CLIENT_OPTION | tr -d "\n"`
    fi
    if [ -e "/data/disk/$_USER/log/cores.txt" ] ; then
      _CLIENT_CORES=`cat /data/disk/$_USER/log/cores.txt`
      _CLIENT_CORES=`echo -n $_CLIENT_CORES | tr -d "\n"`
    fi
    if [ -e "/data/disk/$_USER/log/subscr.txt" ] ; then
      _CLIENT_SUBSCR=`cat /data/disk/$_USER/log/subscr.txt`
      _CLIENT_SUBSCR=`echo -n $_CLIENT_SUBSCR | tr -d "\n"`
    fi
    if [ -e "/data/disk/$_USER/log/email.txt" ] ; then
      _CLIENT_EMAIL=`cat /data/disk/$_USER/log/email.txt`
      _CLIENT_EMAIL=`echo -n $_CLIENT_EMAIL | tr -d "\n"`
      if [[ "$_CLIENT_EMAIL" =~ "@" ]] ; then
        true
      else
        msg "EXIT: You must enter **your** valid e-mail address in the _CLIENT_EMAIL variable"
        msg "EXIT: stored both in the /root/.$_USER.octopus.cnf config file **and**"
        msg "EXIT: in the /data/disk/$_USER/log/email.txt file"
        msg "EXIT: Bye (1)"
        exit 1
      fi
      _CLIENT_EMAIL=${_CLIENT_EMAIL//\\\@/\@}
    fi
    if [[ "$_CLIENT_EMAIL" =~ "omega8.cc" ]] ; then
      _CHECK_HOST=`uname -n`
      if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] ; then
        true
      else
        msg "EXIT: You must enter **your** valid e-mail address in the _CLIENT_EMAIL variable"
        msg "EXIT: stored both in the /root/.$_USER.octopus.cnf config file **and**"
        msg "EXIT: in the /data/disk/$_USER/log/email.txt file"
        msg "EXIT: Bye (2)"
        exit 1
      fi
    fi
#
# Check for last distro nr
    if [ -d "$_ROOT/distro" ] ; then
      cd $_ROOT/distro
      list=([0-9]*)
      last=${list[@]: -1}
      _LASTNUM=$last
      #msg "_LASTNUM is $last"
      nextnum=00$((10#${last%%[^0-9]*} + 1))
      nextnum=${nextnum: -3}
      _DISTRO=${nextnum}
    else
      true
      #msg "_LASTNUM is $_LASTNUM"
    fi
    #msg "_DISTRO is $_DISTRO"
#
# Check for last hm nr
    if [ -d "$_ROOT/aegir/distro" ] ; then
      cd $_ROOT/aegir/distro
      listx=([0-9]*)
      lastx=${listx[@]: -1}
      _LAST_HMR=$lastx
      #msg "_LAST_HMR is $lastx"
      nextnumx=00$((10#${lastx%%[^0-9]*} + 1))
      nextnumx=${nextnumx: -3}
      _HM_DISTRO=${nextnumx}
    else
      true
      #msg "_LAST_HMR is $_LAST_HMR"
    fi
    #msg "_HM_DISTRO is $_HM_DISTRO"
#
# Check for last all nr
    if [ -d "/data/all" ] ; then
      cd /data/all
      listl=([0-9]*)
      lastl=${listl[@]: -1}
      _LAST_ALL=$lastl
      #msg "_LAST_ALL is $lastl"
      nextnuml=00$((10#${lastl%%[^0-9]*} + 1))
      nextnuml=${nextnuml: -3}
      _ALL_DISTRO=${nextnuml}
    else
      true
      #msg "_LAST_ALL is $_LAST_ALL"
    fi
    #msg "_ALL_DISTRO is $_ALL_DISTRO"
#
#
  elif [ ! -d "$_ROOT/distro" ] ; then
    #msg "UPGRADE v.1 in progress..."
    #msg "_DISTRO is $_DISTRO"
    if [ -e "$_ROOT/log/domain.txt" ] ; then
      _DOMAIN=`cat $_ROOT/log/domain.txt`
      _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
    fi
    #msg "_DOMAIN is $_DOMAIN"
  fi
else
msg "NEW Aegir Satellite Instance setup in progress..."
#
# Check for last all nr
  if [ -d "/data/all" ] ; then
    cd /data/all
    listl=([0-9]*)
    lastl=${listl[@]: -1}
    _LAST_ALL=$lastl
    #msg "_LAST_ALL is $lastl"
    nextnuml=00$((10#${lastl%%[^0-9]*} + 1))
    nextnuml=${nextnuml: -3}
    _ALL_DISTRO=${nextnuml}
  else
    true
    #msg "_LAST_ALL is $_LAST_ALL"
  fi
  #msg "_ALL_DISTRO is $_ALL_DISTRO"
  #msg "_DISTRO is $_DISTRO"
  #msg "_DOMAIN is $_DOMAIN"
#
#
  if [ "$_USER" = "admin" ] ; then
    msg "ERROR: $_USER is a restricted username, please choose different _USER"
    exit 1
  elif [ "$_USER" = "hostmaster" ] ; then
    msg "ERROR: $_USER is a restricted username, please choose different _USER"
    exit 1
  fi
  _REGEX="^[[:digit:]]"
  if [[ "$_USER" =~ "$_REGEX" ]] ; then
    msg "ERROR: $_USER is a wrong username, it should start with a letter, not digit"
    exit 1
  fi
  _FREEID=`cat /etc/passwd | cut -d: -f1 | awk '{ print $1}' | grep $_USER`
  if [ ! -z "$_FREEID" ] ; then
    msg "ERROR: $_USER is already used or too similar to an existing username"
    msg "Please choose different _USER"
    exit 1
  fi
fi
#
#
if [ ! -f "/var/aegir/config/server_master/nginx/vhost.d/$_DOMAIN" ] ; then
  true
else
  msg "ERROR: Your defined domain: $_DOMAIN is already used on the Aegir Master Instance"
  msg "Please change the value for _DOMAIN to make it unique"
  msg "Bye"
  exit 1
fi
#
#
_ETH_TEST=`ifconfig 2>&1`
if [[ "$_ETH_TEST" =~ "venet0" ]] ; then
  _VMFAMILY="VZ"
  _IFCONFIG="venet0"
elif [ -e "/proc/bean_counters" ] ; then
  _VMFAMILY="VZ"
  _IFCONFIG="venet0"
else
  _VMFAMILY="XEN"
  _IFCONFIG="eth0"
fi
if [ "$_DNS_SETUP_TEST" = "YES" ] ; then
  if [ -z "$_MY_OWNIP" ] ; then
    _THISHTIP=`ifconfig $_IFCONFIG | grep 'inet addr:' | cut -d: -f2 | awk '{ print $1}'`
  else
    _THISHTIP="$_MY_OWNIP"
  fi
  _LOC_DOM="$_DOMAIN"
  find_correct_ip
  _THISRDIP="$_LOC_IP"
  if [ "$_THISRDIP" = "$_THISHTIP" ] ; then
    true
  else
    msg "ERROR: Your defined domain: $_DOMAIN doesn't point to your IP: $_THISHTIP"
    msg "Please make sure you have valid IN A or IN CNAME record in your DNS"
    msg "It's also possible, that your DNS change didn't propagate yet"
    msg "Bye"
    exit 1
  fi
else
  if [ -z "$_MY_OWNIP" ] ; then
    _LOC_DOM="$_DOMAIN"
    find_correct_ip
    _THISHTIP="$_LOC_IP"
    _THISRDIP="$_LOC_IP"
  else
    _THISHTIP="$_MY_OWNIP"
    _THISRDIP="$_MY_OWNIP"
  fi
fi
#
#
echo " "
msg "START -> checkpoint: "
cat <<EOF

  * Your e-mail address appears to be $_MY_EMAIL - is that correct?
  * Your client e-mail address appears to be $_CLIENT_EMAIL - is that correct?
  * This server options are listed as $_CLIENT_OPTION / $_CLIENT_SUBSCR
  * Your Aegir control panel for this instance will be available at https://$_DOMAIN.
  * Your Aegir user for this instance will be $_USER.

EOF
echo " "
if prompt_yes_no "Do you want to proceed?" ; then
  true
else
  echo "Installation/upgrade aborted by you"
  exit 1
fi

_MY_EMAIL=${_MY_EMAIL//\@/\\\@}
_RAW_CLIENT_EMAIL="$_CLIENT_EMAIL"
_CLIENT_EMAIL=${_CLIENT_EMAIL//\@/\\\@}

###--------------------###
if [ "$_THIS_DB_HOST" = "FQDN" ] ; then
  _THIS_DB_HOST=`uname -n`
fi
if [ -f "/var/aegir/config/includes/wildcard_listen_http_enabled.txt" ] ; then
  _HTTP_WILDCARD=YES
else
  _HTTP_WILDCARD=NO
fi
if [ -f "/var/aegir/config/server_master/nginx/pre.d/nginx_speed_purge.conf" ] ; then
  _PURGE_MODE=ON
else
  _PURGE_MODE=OFF
fi

msg "8s before we will continue..."
sleep 8
rm -f /tmp/cache.inc*
rm -f /opt/tmp/status-*
rm -f -r /tmp/drush_make_tmp*
rm -f /tmp/pm-updatecode*
action
rm -f /tmp/cache.inc*
rm -f -r /var/opt/*
rm -f -r /opt/tmp/*
rm -f -r /tmp/drush_make_tmp*
rm -f /tmp/pm-updatecode*
rm -f /var/run/boa_run.pid
exit 0


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright (C) 2010-2012 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###

