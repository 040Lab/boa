#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright 2010 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This script is free software licensed
###  under the GNU GPLv3. No warranty is
###  provided and the authors claims no
###  responsibility for any disasters caused
###  during the execution of this script.
###
###  Code: http://github.com/omega8cc
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=EDIT_INSTALLER_VERSION


###---### distro config
#
_COMMONS=EDIT_COMMONS
_DRUPAL5=EDIT_DRUPAL5
_DRUPAL7=EDIT_DRUPAL7
_MANAGINGNEWS=EDIT_MANAGINGNEWS
_OPENATRIUM=EDIT_OPENATRIUM
_OPENPUBLISH=EDIT_OPENPUBLISH
_PROSEPOINT=EDIT_PROSEPOINT
_UBERCART=EDIT_UBERCART


###---### main config
#
_DISTRO=EDIT_DISTRO
_USER=EDIT_USER
_DOMAIN=EDIT_DOMAIN
_WEBG=EDIT_WEBG
_ROOT="/data/disk/$_USER"
_AEGIR_ROOT="$_ROOT/aegir/distro/$_DISTRO"
_DRUSHCMD="php $_ROOT/tools/drush/drush.php"
_STATUS=INIT
_LASTNUM=EDIT_LASTNUM
_PREV_AEGIR_ROOT="$_ROOT/aegir/distro/$_LASTNUM"
_ADM_EMAIL="EDIT_MY_EMAIL"
_AEGIR_VERSION=EDIT_AEGIR_VERSION
_DRUSH_VERSION=EDIT_DRUSH_VERSION


###---### Functions
#
# noticeable messages
msg() {
  echo "==> $*"
}
#
#
# Perform an action, log it, and run the spinner throughout
runner () {
	CMD="$1"
	touch busy
	bash $SRCDIR/spinner busy &
	if $CMD >> $LOG; then
		rm busy
		sleep 1
		success "$CMD:"
		return 0
	else
		rm busy
		sleep 1
		echo "$CMD failed.  Error (if any): $?"
		echo
		echo "Displaying the last 15 lines of $LOG to help troubleshoot this problem:"
		tail -15 $LOG
		return 1
	fi
}
#
# Small spinner
mrun () {
	CMD="$1"
	touch busy
	bash $SRCDIR/spinner busy &
	if $CMD >> $LOG; then
		rm busy
		sleep 1
		return 0
	fi
}
#
# stop on error
# set -e ### disabled for debugging
#
SRCDIR=/opt/tmp/files
LOG=/opt/tmp/aegir-install.log
#
msg "`date` $_STATUS B: Aegir automated install script part B"
if [ `whoami` = "root" ] ; then
  msg "`date` $_STATUS B: This script should be ran as a non-root user - exit now"
  exit 1
fi


###---### Checking status..
#
msg "`date` $_STATUS B: Checking status.."
mrun "sleep 3"
if [ -f "$_ROOT/aegir.sh" ] ; then
_STATUS=UPGRADE
cd $_ROOT
# msg "`date` $_STATUS B: _STATUS is $_STATUS"
# if [ -d "$_PREV_AEGIR_ROOT" ] ; then
#   msg "`date` $_STATUS B: aegir backup now.."
#   mrun "sleep 3"
#   cd $_PREV_AEGIR_ROOT
#   $_DRUSHCMD --root=$_PREV_AEGIR_ROOT provision-backup $_DOMAIN -d
#   msg "`date` $_STATUS B: aegir backup completed"
# fi
# else
# msg "`date` $_STATUS B: _STATUS is $_STATUS"
fi


###---### Add required users and create directories
#
msg "`date` $_STATUS B: Create dirs and/or set good permissions"
mrun "sleep 3"
if [ -f "$_ROOT/aegir.sh" ] ; then
 rm -f $_ROOT/aegir.sh
fi
touch $_ROOT/aegir.sh
chmod 0755 $_ROOT/aegir.sh
echo -e "#!/bin/sh\n\n$_DRUSHCMD '@hostmaster' hosting-dispatch\ntouch $_ROOT/$_USER-task.done" | tee -a $_ROOT/aegir.sh >/dev/null 2>&1

mkdir -p $_ROOT/aegir/distro
mkdir -p $_ROOT/distro/$_DISTRO
mkdir -p $_ROOT/src/$_DISTRO
mkdir -p $_ROOT/src/modules
mkdir -p $_ROOT/src/themes
mkdir -p $_ROOT/tools
mkdir -p $_ROOT/log
mkdir -p $_ROOT/u
chmod 0711 $_ROOT/aegir/distro
chmod 0711 $_ROOT/aegir
chmod 0711 $_ROOT/tools
chmod 0771 $_ROOT/u
chmod 0711 $_ROOT/distro
chmod 0711 $_ROOT/distro/$_DISTRO
chmod 0700 $_ROOT/log
chmod 0700 $_ROOT/src
chmod 0700 $_ROOT/src/$_DISTRO
chmod 0700 $_ROOT/src/modules
chmod 0700 $_ROOT/src/themes

if [ $_STATUS = "UPGRADE" ] ; then
 msg "`date` $_STATUS B: UPGRADE in progress.."
 if [ -d "$_ROOT/distro" ] ; then
  msg "`date` $_STATUS B: UPGRADE v.2 in progress.."
  if [ -f "$_ROOT/log/domain.txt" ] ; then
   _DOMAIN=`cat $_ROOT/log/domain.txt`
   _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
  fi
  msg "`date` $_STATUS B: RAW _DOMAIN is $_DOMAIN"
 elif [ ! -d "$_ROOT/distro" ] ; then
  msg "`date` $_STATUS B: UPGRADE v.1 in progress.."
  msg "`date` $_STATUS B: _DISTRO is $_DISTRO"
  if [ -f "$_ROOT/log/domain.txt" ] ; then
   _DOMAIN=`cat $_ROOT/log/domain.txt`
   _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
  fi
  msg "`date` $_STATUS B: RAW _DOMAIN is $_DOMAIN"
 fi
else
 msg "`date` $_STATUS B: NEW AEGIR setup in progress.."
 msg "`date` $_STATUS B: _DISTRO is $_DISTRO"
 msg "`date` $_STATUS B: RAW _DOMAIN is $_DOMAIN"
fi
echo $_DOMAIN > $_ROOT/log/domain.txt


###---### Run standard installer
#
msg "`date` $_STATUS B: Run standard installer"
mrun "sleep 3"
cd $_ROOT/tools
if [ $_STATUS = "UPGRADE" ] ; then
  mv drush $_ROOT/backups/drush-pre-$_DISTRO
fi
  wget http://ftp.drupal.org/files/projects/drush-$_DRUSH_VERSION.tar.gz &> /dev/null
  tar -xzf drush-$_DRUSH_VERSION.tar.gz
  rm drush-$_DRUSH_VERSION.tar.gz
if $_DRUSHCMD help > /dev/null ; then
  msg "`date` $_STATUS B: Drush seems to be functioning properly"
else
  msg "`date` $_STATUS B: Drush is broken ($DRUSH help failed)"
  exit 1
fi
if [ $_STATUS = "UPGRADE" ] ; then
  mv $_ROOT/.drush/provision $_ROOT/backups/provision-pre-$_DISTRO
  mv $_ROOT/.drush/drush_make $_ROOT/backups/drush_make-pre-$_DISTRO
fi
if $_DRUSHCMD help | grep "^ provision-install" > /dev/null ; then
  msg "`date` $_STATUS B: Provision already seems to be installed"
else
  msg "`date` $_STATUS B: Installing provision backend in $_ROOT/.drush"
  mkdir -p $_ROOT/.drush
  if [ "$_AEGIR_VERSION" = "HEAD" ]; then
    git clone git://git.aegirproject.org/provision $_ROOT/.drush/provision &> /dev/null
  else
    cd $_ROOT/.drush
    wget http://files.aegirproject.org/provision-$_AEGIR_VERSION.tgz &> /dev/null
    tar -xzf provision-$_AEGIR_VERSION.tgz
    rm provision-$_AEGIR_VERSION.tgz
    if [ $_STATUS = "UPGRADE" ] ; then
      $_DRUSHCMD dl drush_make-6.x-2.0-beta8 &> /dev/null
    fi
  fi
fi
git clone git://git.koumbit.net/drupal/contrib/modules/provision_boost &> /dev/null


###---### Build Aegir base
#
msg "`date` $_STATUS B: Build Aegir base"
mrun "sleep 3"
if [ $_STATUS = "INIT" ] ; then
    msg "`date` $_STATUS B: INIT"
    mrun "sleep 3"
    cd $_ROOT
    AGRPXSWD=`cat $_ROOT/.$_USER.pass.txt`
    AGRPASWD=`echo -n $AGRPXSWD | tr -d "\n"`
    AEGIR_HOST=`hostname -f`
	msg "`date` $_STATUS B: Deploying hostmaster application init"
	$_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --db_service_type=mysql --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION &> /dev/null
	mrun "sleep 3"
	cd $_AEGIR_ROOT
	mkdir -p sites/$_DOMAIN/files/tmp
	mkdir -p sites/$_DOMAIN/files/js
	mkdir -p sites/$_DOMAIN/files/css
	chmod 2770 -R sites/$_DOMAIN/files
	chgrp -R $_WEBG sites/$_DOMAIN/files
	rm -f /data/u/$_DOMAIN
	rm -f $_ROOT/u/$_DOMAIN
	ln -s $_AEGIR_ROOT /data/u/$_DOMAIN
	ln -s $_AEGIR_ROOT $_ROOT/u/$_DOMAIN
	msg "`date` $_STATUS B: Deploying hostmaster application done"
elif [ $_STATUS = "UPGRADE" ] ; then
    msg "`date` $_STATUS B: Hostmaster STATUS: Start, please wait..."
    mrun "sleep 3"
    cd $_PREV_AEGIR_ROOT
    export DEBIAN_FRONTEND=noninteractive
    $_DRUSHCMD hostmaster-migrate $_DOMAIN $_AEGIR_ROOT 2> /dev/null
    export DEBIAN_FRONTEND=text
    msg "`date` $_STATUS B: Hostmaster STATUS: Completed"
fi


###--------------------###
msg "`date` $_STATUS B: Simple check if Aegir install or upgrade is successful"
mrun "sleep 3"
if [ -f "$_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
  msg "`date` $_STATUS B: Aegir setup test OK"
else
  msg "`date` $_STATUS B: FATAL ERROR: Something is wrong, Aegir not ready - exit now"
  exit 1
fi


###---### Enhance Aegir UI
#
msg "`date` $_STATUS B: Enhance Aegir UI"
mrun "sleep 3"
cd $_AEGIR_ROOT/profiles/hostmaster/themes/eldir
cp -af /opt/tmp/nginx-for-drupal/aegir/helpers/eldir.diff ./
patch -p1 <./eldir.diff &> /dev/null
mkdir -p $_AEGIR_ROOT/sites/all/modules
cd $_AEGIR_ROOT/sites/all/modules
wget -U iCab http://omega8.cc/dev/aegir_custom_settings-6.x-1.0-alpha1.tar.gz &> /dev/null
tar -xzf aegir_custom_settings-6.x-1.0-alpha1.tar.gz
cd $_AEGIR_ROOT/sites/$_DOMAIN
$_DRUSHCMD dl features -y &> /dev/null
$_DRUSHCMD en aegir_custom_settings -y &> /dev/null
$_DRUSHCMD en hosting_client -y &> /dev/null
$_DRUSHCMD vset --always-set hosting_client_register_user 1 &> /dev/null
$_DRUSHCMD vset --always-set hosting_admin_client 1 &> /dev/null
$_DRUSHCMD vset --always-set hosting_client_send_welcome 1 &> /dev/null
$_DRUSHCMD vset --always-set client 1 &> /dev/null
$_DRUSHCMD vset --always-set hosting_feature_client 1 &> /dev/null
$_DRUSHCMD vset --always-set clone 1 &> /dev/null
$_DRUSHCMD vset --always-set hosting_client_send_welcome 1 &> /dev/null
$_DRUSHCMD vset --always-set hosting_queue_cron_frequency 900 &> /dev/null
$_DRUSHCMD vset --always-set hosting_queue_tasks_frequency 5 &> /dev/null
$_DRUSHCMD vset --always-set hosting_queue_tasks_items 1 &> /dev/null
$_DRUSHCMD vset --always-set site_frontpage "hosting/sites" &> /dev/null
$_DRUSHCMD vset --always-set site_name "Aegir Hosting System by Octopus" &> /dev/null
$_DRUSHCMD vset --always-set site_mail "$_ADM_EMAIL" &> /dev/null
$_DRUSHCMD fr aegir_custom_settings -y &> /dev/null
$_DRUSHCMD vset --always-set hosting_alias_automatic_no_www 1 &> /dev/null
$_DRUSHCMD vset --always-set hosting_alias_automatic_www 1 &> /dev/null
perl -p -i -e "s/(320px)/640px/g" $_AEGIR_ROOT/profiles/hostmaster/themes/eldir/style.css &> /dev/null


###---### Aegir global.inc file
#
msg "`date` $_STATUS B: Aegir global.inc file"
cd $_ROOT
if [ -f "/data/conf/global.inc" ] ; then
  rm -f $_ROOT/config/includes/global.inc
  ln -s /data/conf/global.inc $_ROOT/config/includes/global.inc
else
  rm -f $_ROOT/config/includes/global.inc
  cd /data/conf
  cp -af /opt/tmp/nginx-for-drupal/aegir/conf/global.inc.aegir.txt ./
  mv -f global.inc.aegir.txt global.inc
  ln -s /data/conf/global.inc $_ROOT/config/includes/global.inc
fi


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright 2010 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###

