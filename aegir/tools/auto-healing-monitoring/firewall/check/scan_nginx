#!/usr/bin/perl

###
### this is a httpd abuse monitor for nginx
###

if (-e "/var/xdrago/log/fire.pid") {exit;}
&makeactions;
print " CONTROL 1 done_______________________\n ...\n";
exit;

#############################################################################
sub makeactions
{
  local(@MYARR) = `tail --lines=300 /var/log/nginx/access.log 2>&1`;
  local($maxnumber,$critnumber,$alert);
  local($sumar,$li_cnt{$VISITOR},$li_cndx{$DOMAIN});
  foreach $line (@MYARR) {
    local($VISITOR, $PROXY, $REAL, $RESTX) = split(/\s+/,$line);
    $VISITOR =~ s/[^0-9\.]//g;
    if ($VISITOR =~ /^((192.168.)|(172.16.)|(unknown)|(10.)|(127.0.))/)
    {
      $VISITOR = $PROXY;
      if ($VISITOR =~ /^((192.168.)|(172.16.)|(unknown)|(10.)|(127.0.))/)
      {
        $VISITOR = $REAL;
      }
    }
    $VISITOR =~ s/[^0-9\.]//g;
    if ($VISITOR !~ /^$/ && $VISITOR =~ /^([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})\.([0-9]{1,3})$/) {
      chomp($line);
      $li_cnt{$VISITOR}++;
      $li_cnt{$VISITOR} = "555" if ($line =~ /(HTTrack)/);
    }
  }
  foreach $VISITOR (sort keys %li_cnt) {
    $sumar = $sumar + $li_cnt{$VISITOR};
    local($thissumar) = $li_cnt{$VISITOR};
    $maxnumber = 10;    ### default: 10
    $critnumber = 300;  ### default: 300
    $critnumber = 888 if ($VISITOR =~ /^(88.88.88.88)$/); ### default for server IP
    local($blocked) = 0;
    &check_ip($VISITOR);
    if ($thissumar > $maxnumber && $thissumar <= $critnumber) {
      &trash_it_action($VISITOR,$thissumar) if !$blocked;
    }
    if ($thissumar > $critnumber) {
      `/sbin/iptables -A INPUT -p tcp -s $VISITOR --dport 80 -j DROP` if (!$blocked);
      `/sbin/iptables -A INPUT -p tcp -s $VISITOR --dport 443 -j DROP` if (!$blocked);
      &trash_it_action($VISITOR,"x$thissumar") if (!$blocked);
      `echo "$VISITOR # [x$thissumar] $times $RESOLVED_REMOTE_HOST" >> /etc/csf/csf.deny` if (!$blocked);
    }
  }
  print "\n===[$sumar]\tGLOBAL===\n\n";
  undef (%li_cnt);
}

#############################################################################
sub trash_it_action
{
  $times = `date +%y%m%d-%H%M%S`;
  local(@UPTIME) = `/usr/bin/uptime 2>&1`;
  chomp($times);
  $LOGpliczek = "/var/xdrago/log/VISITOR_ABUSE_ONE.log";
  open (DISKF, ">>$LOGpliczek");
  local($ABUSER,$COUNTER) = @_;
  local($machine) = $ABUSER;
  $machine =~ s/^\s+|\s+$//g;
  @bytes = split (/\./, $machine);
  $packaddr = pack ("C4", @bytes);
  if (!(($name, $altnames, $addrtype, $len, @addrlist) =
    gethostbyaddr ($packaddr, 2))) {
    $RESOLVED_REMOTE_HOST = "";
  }
  else {
    $RESOLVED_REMOTE_HOST = "$name";
  }
  print "NORM $ABUSER [$COUNTER] recorded... $RESOLVED_REMOTE_HOST\n";
  print DISKF "NORM $ABUSER\t[$COUNTER] $times $RESOLVED_REMOTE_HOST@UPTIME";
  close (DISKF);
}

#############################################################################
sub check_ip
{
  $this_path = "/etc/csf/csf.deny";
  local($IP) = @_;
  open (NOT,"<$this_path");
  @banetable = <NOT>;
  close (NOT);
  foreach $banerecord (@banetable) {
    chomp ($banerecord);
    local($ifbanned, $rest) = split(/\s+/,$banerecord);
    $ifbanned =~ s/[^0-9\.]//g;
    if ($ifbanned eq $IP) {
      $blocked = 1;
      last;
    }
  }
}
###EOF###
