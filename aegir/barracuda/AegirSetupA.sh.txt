#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright 2010 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This script is free software licensed
###  under the GNU GPLv3. No warranty is
###  provided and the authors claims no
###  responsibility for any disasters caused
###  during the execution of this script.
###
###  Code: http://github.com/omega8cc
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=EDIT_INSTALLER_VERSION


###---### distro config
#
_COCOMORE=EDIT_COCOMORE
_COMMONS=EDIT_COMMONS
_DRUPAL5=EDIT_DRUPAL5
_DRUPAL7=EDIT_DRUPAL7
_MANAGINGNEWS=EDIT_MANAGINGNEWS
_OPENATRIUM=EDIT_OPENATRIUM
_OPENPUBLISH=EDIT_OPENPUBLISH
_PROSEPOINT=EDIT_PROSEPOINT
_UBERCART=EDIT_UBERCART


###---### main config
#
_DISTRO=EDIT_DISTRO
_HM_DISTRO=EDIT_HM_DISTRO
_LAST_HMR=EDIT_LAST_HMR
_USER=EDIT_USER
_DOMAIN=EDIT_DOMAIN
_WEBG=EDIT_WEBG
_USRG=EDIT_USRG
_ROOT="/data/disk/$_USER"
_CORE="/data/all/$_DISTRO"
_AEGIR_ROOT="$_ROOT/aegir/distro/$_HM_DISTRO"
_DISTRO_ROOT="$_ROOT/distro/$_DISTRO"
_STATUS=INIT
_LASTNUM=EDIT_LASTNUM
_LAST_HMR=EDIT_LAST_HMR
_AEGIR_VERSION=EDIT_AEGIR_VERSION
_DRUSH_VERSION=EDIT_DRUSH_VERSION
_ADM_EMAIL="EDIT_MY_EMAIL"
_CLIENT_EMAIL="EDIT_CLIENT_EMAIL"
_THISHTIP=EDIT_THISHTIP


###---### Functions
# noticeable messages
msg() {
  echo "==> $*"
}
#
#
# Perform an action, log it, and run the spinner throughout
runner () {
	CMD="$1"
	touch busy
	bash $SRCDIR/spinner busy &
	if $CMD >> $LOG; then
		rm busy
		sleep 1
		success "$CMD:"
		return 0
	else
		rm busy
		sleep 1
		echo "$CMD failed.  Error (if any): $?"
		echo
		echo "Displaying the last 15 lines of $LOG to help troubleshoot this problem:"
		tail -15 $LOG
		return 1
	fi
}
#
# Small spinner
mrun () {
	CMD="$1"
	touch busy
	bash $SRCDIR/spinner busy &
	if $CMD >> $LOG; then
		rm busy
		sleep 1
		return 0
	fi
}
#
# Simple prompt
prompt_yes_no () {
  while true ; do
    printf "$* [Y/n] "
    read answer
    if [ -z "$answer" ] ; then
      return 0
    fi
    case $answer in
      [Yy]|[Yy][Ee][Ss])
        return 0
        ;;
      [Nn]|[Nn][Oo])
        return 1
        ;;
      *)
        echo "Please answer yes or no"
        ;;
    esac
 done 
}
#
# stop on error
# set -e ### disabled for debugging
#
SRCDIR=/opt/tmp/files
LOG=/opt/tmp/aegir-install.log
#
msg "`date` $_STATUS A: Welcome `uname -a`"
mrun "sleep 3"
msg "`date` $_STATUS A: Aegir automated install script part A"


###---### Stop the cron and wait 3 seconds
#
msg "`date` $_STATUS A: Stop the cron and wait 3 seconds.."
runner "invoke-rc.d cron stop" &> /dev/null
mrun "sleep 3"


###---### Checking status..
#
msg "`date` $_STATUS A: Checking status.."
mrun "sleep 3"
if [ -d "$_ROOT" ] ; then
  _STATUS=UPGRADE
  cd $_ROOT
  msg "`date` $_STATUS A: _STATUS is $_STATUS"
  mrun "sleep 3"
  rm -f $_ROOT/AegirSetupC.sh.txt
  rm -f $_ROOT/AegirSetupB.sh.txt
else
  msg "`date` $_STATUS A: _STATUS is $_STATUS"
fi


###---### Add required users and create directories
#
msg "`date` $_STATUS A: Create directories and/or set good permissions"
mrun "sleep 3"
mkdir -p /data/u
mkdir -p /data/disk
mkdir -p /data/conf
chown root:root /data
chown root:root /data/disk
chown root:root /data/conf
chown root:$_USRG /data/u
chmod 0711 /data
chmod 0771 /data/u
chmod 0711 /data/disk
chmod 0711 /data/conf
if [ ! -d "$_ROOT" ] ; then
  msg "`date` $_STATUS A: Add user"
  mrun "sleep 3"
  adduser --system --home $_ROOT --ingroup $_USRG $_USER &> /dev/null
  adduser $_USER $_WEBG &> /dev/null
fi
if [ ! -d "$_CORE" ] ; then
  mkdir -p $_CORE
  mkdir -p /data/src
  chmod 0711 $_CORE
  chmod 0711 /data/all
  chmod 0700 /data/src
fi
chown -R $_USER:$_USRG $_CORE
chown $_USER:$_USRG /data/all
chown -R $_USER:$_USRG /data/src
chown -R $_USER:$_USRG /data/conf
chown -R $_USER:$_USRG /opt/tmp
chmod 755 $_CORE /data/all /data/src /data /data/conf


###---### Prepare scripts
#
msg "`date` $_STATUS A: Prepare scripts"
mrun "sleep 3"
chmod 0711 $_ROOT
cd $_ROOT
cp -af /opt/tmp/nginx-for-drupal/aegir/barracuda/AegirSetupB.sh.txt ./
cp -af /opt/tmp/nginx-for-drupal/aegir/barracuda/AegirSetupC.sh.txt ./
chown $_USER:$_USRG $_ROOT/AegirSetupB.sh.txt
chown $_USER:$_USRG $_ROOT/AegirSetupC.sh.txt


###---### Run standard pre-install
#
msg "`date` $_STATUS A: pre-install start"
mrun "sleep 3"
if [ ! -f "$_ROOT/.$_USER.pass.txt" ] ; then
  touch $_ROOT/.$_USER.pass.txt
  chmod 0600 $_ROOT/.$_USER.pass.txt
  pwgen -c -y -s > $_ROOT/.$_USER.pass.txt
  chown $_USER:$_USRG $_ROOT/.$_USER.pass.txt
  echo "$_USER ALL=NOPASSWD: /etc/init.d/nginx" >> /etc/sudoers
fi
AGRPXSWD=`cat $_ROOT/.$_USER.pass.txt`
AGRPASWD=`echo -n $AGRPXSWD | tr -d "\n"`
AEGIR_HOST=`hostname -f`
_RESOLVEIP=`resolveip $AEGIR_HOST 2> /dev/null`
if [ -z "$_RESOLVEIP" ] ; then
  msg "This server does not have a hostname that resolves to an IP address"
  exit 1
else
  AEGIR_HOST_IP=`echo $_RESOLVEIP | cut -d: -f2 | awk '{ print $6}'`
  true
fi
/usr/bin/mysql -h localhost --port=3306 -u root mysql<<EOFMYSQL
FLUSH PRIVILEGES;
GRANT ALL PRIVILEGES ON *.* TO '$_USER'@'$_DOMAIN' IDENTIFIED BY '$AGRPASWD' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO '$_USER'@'$AEGIR_HOST' IDENTIFIED BY '$AGRPASWD' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO '$_USER'@'$AEGIR_HOST_IP' IDENTIFIED BY '$AGRPASWD' WITH GRANT OPTION;
GRANT ALL PRIVILEGES ON *.* TO '$_USER'@'localhost' IDENTIFIED BY '$AGRPASWD' WITH GRANT OPTION;
FLUSH PRIVILEGES;
EOFMYSQL
mrun "sleep 3"
/usr/bin/mysqladmin -u root -h localhost --port=3306 reload
cd $_ROOT
msg "`date` $_STATUS A: pre-install completed"
mrun "sleep 3"


###---### Install or upgrade Aegir Hostmaster instance [Y/n]
#
if [ $_STATUS = "INIT" ] ; then
  msg "`date` $_STATUS A: Switch user and run AegirSetupB"
  mrun "sleep 3"
  rm -f /opt/tmp/testecho*
  invoke-rc.d cron stop &> /dev/null
  su -s /bin/bash $_USER -c "/bin/bash AegirSetupB.sh.txt"
  msg "`date` $_STATUS A: Aegir Hostmaster instance install completed"
else
  echo " "
  if prompt_yes_no "Do you want to upgrade this Aegir Hostmaster instance?" ; then
    true
    mrun "sleep 3"
    msg "`date` $_STATUS A: Switch user and run AegirSetupB"
    mrun "sleep 3"
    rm -f /opt/tmp/testecho*
    invoke-rc.d cron stop &> /dev/null
    su -s /bin/bash $_USER -c "/bin/bash AegirSetupB.sh.txt"
    msg "`date` $_STATUS A: Aegir Hostmaster instance install or upgrade completed"
  else
    msg "`date` $_STATUS A: Aegir Hostmaster instance not upgraded this time"
    mrun "sleep 3"
  fi
fi


###---### Run standard post-install
#
if [ $_STATUS = "INIT" ] ; then
  msg "`date` $_STATUS A: post-install start"
  mrun "sleep 3"
  if [ ! -f "$_ROOT/config/$_USER.nginx.conf" ] ; then
    rm -f /var/aegir/config/server_master/nginx/platform.d/$_USER.conf
    echo "include $_ROOT/config/server_master/nginx/vhost.d/*;" > $_ROOT/config/$_USER.nginx.conf
    ln -s $_ROOT/config/$_USER.nginx.conf /var/aegir/config/server_master/nginx/platform.d/$_USER.conf
  fi
  if [ ! -f "$_ROOT/config/includes/nginx_advanced_include.conf.orig" ] ; then
    cd $_ROOT/config/includes
    mv -f nginx_simple_include.conf nginx_simple_include.conf.orig
    mv -f nginx_advanced_include.conf nginx_advanced_include.conf.orig
    cp -af /opt/tmp/nginx-for-drupal/aegir/conf/nginx_advanced_include.conf ./
    ln -s nginx_advanced_include.conf nginx_simple_include.conf
  fi
  if [ ! -f "/var/aegir/config/server_master/nginx/conf.d/custom_nginx.conf" ] ; then
    echo "  gzip_static       on;" > /var/aegir/config/server_master/nginx/conf.d/custom_nginx.conf
    echo "  upload_progress uploads 1m;" >> /var/aegir/config/server_master/nginx/conf.d/custom_nginx.conf
  fi
  chgrp -R $_WEBG $_AEGIR_ROOT/sites/$_DOMAIN/files
  chgrp $_WEBG $_AEGIR_ROOT/sites/$_DOMAIN/settings.php
  rm -f -r $_AEGIR_ROOT/themes/bluemarine
  rm -f -r $_AEGIR_ROOT/themes/chameleon
  rm -f -r $_AEGIR_ROOT/themes/pushbutton
  rm -f -r $_AEGIR_ROOT/scripts
  rm -f $_AEGIR_ROOT/themes/README.txt
  rm -f $_AEGIR_ROOT/*.txt
  killall nginx &> /dev/null
  invoke-rc.d nginx start &> /dev/null
  cd $_AEGIR_ROOT
  cp -af /opt/tmp/nginx-for-drupal/aegir/conf/robots.txt ./
  cd $_ROOT
  msg "`date` $_STATUS A: post-install completed"
fi


###---### Set permissions for all
#
msg "`date` $_STATUS A: Set correct permissions"
mrun "sleep 3"
chmod 0711 $_AEGIR_ROOT &> /dev/null
chmod 0711 $_ROOT/config &> /dev/null
chmod 0711 $_ROOT/config/includes &> /dev/null
chmod 0700 $_ROOT/backups &> /dev/null


###---### Platforms [Y/n]
#
if [ $_STATUS = "INIT" ] ; then
  msg "`date` $_STATUS A: Switch user and run Distros build"
  mrun "sleep 3"
  rm -f /opt/tmp/testecho*
  su -s /bin/bash $_USER -c "/bin/bash AegirSetupC.sh.txt"
  msg "`date` $_STATUS A: Distributions install completed"
else
  echo " "
  if prompt_yes_no "Do you want to install some latest, ready to use platforms?" ; then
    true
    msg "NOTE: Please choose only the platforms/distributions you want to have included"
    mrun "sleep 3"
    msg "`date` $_STATUS A: Switch user and run Distros build"
    mrun "sleep 3"
    invoke-rc.d cron stop &> /dev/null
    rm -f /opt/tmp/testecho*
    su -s /bin/bash $_USER -c "/bin/bash AegirSetupC.sh.txt"
    msg "`date` $_STATUS A: Distributions install completed"
    invoke-rc.d cron start &> /dev/null
  else
    msg "`date` $_STATUS A: No new platforms added this time"
    mrun "sleep 3"
  fi
fi


###---### Clean up old and install files
#
msg "`date` $_STATUS A: Clean up old install files"
mrun "sleep 3"
rm -f $_ROOT/AegirSetupC.sh.txt
rm -f $_ROOT/AegirSetupB.sh.txt
rm -f $_ROOT/*.sh.txt


###---### Add cron task
#
if [ $_STATUS = "INIT" ] ; then
 msg "`date` $_STATUS A: Add cron task"
 mrun "sleep 3"
 echo -e "*/1 * * * * bash /var/xdrago/run-$_USER >/dev/null 2>&1" | tee -a /var/spool/cron/crontabs/root >/dev/null 2>&1
fi
rm -f /var/spool/cron/crontabs/$_USER
invoke-rc.d cron restart &> /dev/null


###---### Add ftps/lshell access
#
if [ $_STATUS = "INIT" ] ; then
  _USERFTP="$_USER.ftp"
  _USERFTP_ROOT="/home/$_USERFTP"
  if [ ! -d "$_USERFTP_ROOT" ] ; then
    msg "`date` $_STATUS A: Add ftps/lshell user"
    mrun "sleep 3"
    # add user
    useradd -d /home/$_USERFTP -s /usr/bin/lshell -m -N -r $_USERFTP &> /dev/null
    adduser $_USERFTP $_WEBG &> /dev/null
    # Make sure new file which contains password is private
    cd $_ROOT/log
    touch $_ROOT/log/pass.txt
    chmod 0600 $_ROOT/log/pass.txt
    # generate a nice secure password and put it in a file
    pwgen -c -y -s > $_ROOT/log/pass.txt
    # get the password hash
    ph=$(makepasswd --clearfrom=$_ROOT/log/pass.txt --crypt-md5 |awk '{print $2}')
    # Set the password
    usermod -p $ph $_USERFTP &> /dev/null
    passwd -w 7 -x 90 $_USERFTP &> /dev/null
    usermod -aG lshellg $_USERFTP &> /dev/null
  fi
  chsh -s /usr/bin/lshell $_USERFTP &> /dev/null
  echo " " >> /etc/lshell.conf
  echo "[$_USERFTP]" >> /etc/lshell.conf
  echo "path : ['/data/disk/$_USER/distro', '/data/disk/$_USER/static']" >> /etc/lshell.conf
fi


###---### Read or create pass.txt
#
msg "`date` $_STATUS A: Read or create pass.txt"
mrun "sleep 3"
if [ -f "$_ROOT/pass.txt" ] ; then 
 _PASWD=`cat $_ROOT/pass.txt`
 _PASWD=`echo -n $_PASWD | tr -d "\n"`
 mv $_ROOT/pass.txt $_ROOT/log/pass.txt &> /dev/null
elif [ -f "$_ROOT/log/pass.txt" ] ; then
 _PASWD=`cat $_ROOT/log/pass.txt`
 _PASWD=`echo -n $_PASWD | tr -d "\n"`
 rm -f $_ROOT/pass.txt
else
 cd $_ROOT/log
 touch $_ROOT/log/pass.txt
 chmod 0600 $_ROOT/log/pass.txt
 pwgen -c -y -s > $_ROOT/log/pass.txt &> /dev/null
 ph=$(makepasswd --clearfrom=$_ROOT/log/pass.txt --crypt-md5 |awk '{print $2}')
 usermod -p $ph $_USERFTP &> /dev/null
 _PASWD=`cat $_ROOT/log/pass.txt`
 _PASWD=`echo -n $_PASWD | tr -d "\n"`
fi


###---### Create ftp symlinks
#
msg "`date` $_STATUS A: Create ftp symlinks"
mrun "sleep 3"
if [ ! -d "$_ROOT/static" ] ; then
 mkdir -p $_ROOT/static
 ln -s $_ROOT/static /home/$_USERFTP/static
fi
chown $_USER:$_USRG $_ROOT/static
chmod 02775 $_ROOT/static
echo empty > $_ROOT/static/EMPTY.txt
if [ ! -d "/home/$_USERFTP/platforms/$_DISTRO" ] ; then
  mkdir -p /home/$_USERFTP/platforms/$_DISTRO
  chown -R $_USER:$_USRG /home/$_USERFTP/platforms
  chmod 700 /home/$_USERFTP
  ln -s $_ROOT/distro/$_DISTRO/acquia/sites /home/$_USERFTP/platforms/$_DISTRO/acquia
  ln -s $_ROOT/distro/$_DISTRO/pressflow-$_DRUPAL5/sites /home/$_USERFTP/platforms/$_DISTRO/drupal5
  ln -s $_ROOT/distro/$_DISTRO/managingnews-$_MANAGINGNEWS/sites /home/$_USERFTP/platforms/$_DISTRO/managingnews
  ln -s $_ROOT/distro/$_DISTRO/managingnews/sites /home/$_USERFTP/platforms/$_DISTRO/managingnews-dev
  ln -s $_ROOT/distro/$_DISTRO/atrium-$_OPENATRIUM/sites /home/$_USERFTP/platforms/$_DISTRO/openatrium
  ln -s $_ROOT/distro/$_DISTRO/openatrium/sites /home/$_USERFTP/platforms/$_DISTRO/openatrium-dev
  ln -s $_ROOT/distro/$_DISTRO/prosepoint-$_PROSEPOINT/sites /home/$_USERFTP/platforms/$_DISTRO/prosepoint
  ln -s $_ROOT/distro/$_DISTRO/pressflow/sites /home/$_USERFTP/platforms/$_DISTRO/drupal6
  ln -s $_ROOT/distro/$_DISTRO/uberdrupal/sites /home/$_USERFTP/platforms/$_DISTRO/ubercart
  ln -s $_ROOT/distro/$_DISTRO/$_DRUPAL7/sites /home/$_USERFTP/platforms/$_DISTRO/drupal7
  ln -s $_ROOT/distro/$_DISTRO/openpublish/sites /home/$_USERFTP/platforms/$_DISTRO/openpublish
  ln -s $_ROOT/distro/$_DISTRO/fserver/sites /home/$_USERFTP/platforms/$_DISTRO/fserver
  ln -s $_ROOT/distro/$_DISTRO/drupal_commons/sites /home/$_USERFTP/platforms/$_DISTRO/commons
  ln -s $_ROOT/distro/$_DISTRO/$_COCOMORE/sites /home/$_USERFTP/platforms/$_DISTRO/cocomore
fi


###---### Prepare setupmail.txt
#
msg "`date` $_STATUS A: Prepare setupmail.txt"
mrun "sleep 3"
echo $_CLIENT_EMAIL > /opt/tmp/.clemail.txt
perl -p -i -e "s/(\\)//g" /opt/tmp/.clemail.txt
_AT_CLIENT_EMAIL=`cat /opt/tmp/.clemail.txt`
_AT_CLIENT_EMAIL=`echo -n $_AT_CLIENT_EMAIL | tr -d "\n"`
rm -f /opt/tmp/.clemail.txt
echo $_ADM_EMAIL > /opt/tmp/.admemail.txt
perl -p -i -e "s/(\\)//g" /opt/tmp/.admemail.txt
_A_DM_EMAIL=`cat /opt/tmp/.admemail.txt`
_A_DM_EMAIL=`echo -n $_A_DM_EMAIL | tr -d "\n"`
rm -f /opt/tmp/.admemail.txt
if [ -f "$_ROOT/log/setupmail.txt" ] ; then
 cd $_ROOT/log
 if [ -f "$_ROOT/log/upgrademail.txt" ] ; then
   mv $_ROOT/log/upgrademail.txt $_ROOT/log/upgrademail-pre-$_DISTRO.txt
 fi
 cp -af /opt/tmp/nginx-for-drupal/aegir/conf/upgrademail.txt ./
 perl -p -i -e "s/(aegir.dragon.ny.host8.biz)/$_DOMAIN/g" $_ROOT/log/upgrademail.txt
 perl -p -i -e "s/(dragon)/$_USER/g" $_ROOT/log/upgrademail.txt
 perl -p -i -e "s/(FN8rXcQn)/$_PASWD/g" $_ROOT/log/upgrademail.txt
 perl -p -i -e "s/(166.84.6.231)/$_THISHTIP/g" $_ROOT/log/upgrademail.txt
 perl -p -i -e "s/(ADMIN_EMAIL)/$_CLIENT_EMAIL/g" $_ROOT/log/upgrademail.txt
elif [ $_STATUS = "INIT" ] ; then
 cd $_ROOT/log
 cp -af /opt/tmp/nginx-for-drupal/aegir/conf/setupmail.txt ./
 perl -p -i -e "s/(aegir.dragon.ny.host8.biz)/$_DOMAIN/g" $_ROOT/log/setupmail.txt
 perl -p -i -e "s/(dragon)/$_USER/g" $_ROOT/log/setupmail.txt
 perl -p -i -e "s/(FN8rXcQn)/$_PASWD/g" $_ROOT/log/setupmail.txt
 perl -p -i -e "s/(166.84.6.231)/$_THISHTIP/g" $_ROOT/log/setupmail.txt
 perl -p -i -e "s/(ADMIN_EMAIL)/$_CLIENT_EMAIL/g" $_ROOT/log/setupmail.txt
fi


###---### Send setup e-mail
#
if [ $_STATUS = "INIT" ] ; then
 msg "`date` $_STATUS A: Send setup e-mail on init"
 mrun "sleep 3"
 TIME=`date`
 echo $TIME > $_ROOT/log/date-init.txt
 if [ -f "$_ROOT/log/setupmail.txt" ] ; then
   cat $_ROOT/log/setupmail.txt | mail -a "From: $_A_DM_EMAIL" -e -b $_A_DM_EMAIL -s "Your Aegir Install on $TIME [$_USER]" $_AT_CLIENT_EMAIL
 fi
else
 msg "`date` $_STATUS A: Resend setup e-mail on upgrade"
 mrun "sleep 3"
 TIME=`date`
 echo $TIME > $_ROOT/log/date-upgrade-$_DISTRO.txt
 if [ -f "$_ROOT/log/upgrademail.txt" ] ; then
   cat $_ROOT/log/upgrademail.txt | mail -a "From: $_A_DM_EMAIL" -e -b $_A_DM_EMAIL -s "Your Aegir Upgrade on $TIME [$_USER]" $_AT_CLIENT_EMAIL
 else
   cat $_ROOT/log/setupmail.txt | mail -a "From: $_A_DM_EMAIL" -e -b $_A_DM_EMAIL -s "Your Aegir Upgrade on $TIME [$_USER]" $_AT_CLIENT_EMAIL
 fi
fi


###---### Touch install logs
#
msg "`date` $_STATUS A: Touch install logs"
TIME=`date`
if [ $_STATUS = "INIT" ] ; then
 echo $TIME > $_ROOT/log/date-init.txt
else
 echo $TIME > $_ROOT/log/date-upgrade-$_DISTRO.txt
fi


###---### Start the cron now
#
msg "`date` $_STATUS A: Start the cron now"
runner "invoke-rc.d cron start" 2> /dev/null
msg "`date` $_STATUS A: All done!"
mrun "sleep 3"
cd /
chmod 711 bin boot data dev emul etc home lib media mnt opt sbin selinux srv sys usr var &> /dev/null
mv -f /etc/motd /etc/motd-pre-$_DISTRO &> /dev/null
echo "Welcome to Octopus Aegir Hosting System" > /etc/motd
chown root:root /data/all
chown -R root:root /data/src
chown -R root:root /data/conf
chown -R root:root $_CORE
chown root:root /opt/tmp
chmod 0711 $_CORE /data/all /data/src /data /data/conf &> /dev/null
msg "`date` BYE!"


###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright 2010 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###
