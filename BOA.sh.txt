#!/bin/bash


###----------------------------------------###
###
###  BOA Meta Installer
###
###  Copyright (C) 2010-2014 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: https://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### HOW-TO: run it with bash, not with sh  ###
###----------------------------------------###
###
###   bash BOA.sh.txt
###

###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

export PATH=$PATH:/opt/local/bin
SHELL=/bin/bash
_TODAY=`date +%y%m%d`

fix_dns_settings () {
  mkdir -p /var/backups
  rm -f /var/backups/resolv.conf.tmp
  if [ -e "/etc/resolv.conf" ] ; then
    cp -a /etc/resolv.conf /var/backups/resolv.conf.tmp
  fi
  if [ ! -e "/var/backups/resolv.conf.vanilla" ] ; then
    for Pre in `ls -la /var/backups/resolv.conf.pre-*` ; do
      if [ -e "$Pre" ] && [ -f "$Pre" ] && [ ! -L "$Pre" ] ; then
        cp -a $Pre /var/backups/resolv.conf.vanilla
      fi
    done
  fi
  if [ ! -e "/var/backups/resolv.conf.vanilla" ] ; then
    rm -f /etc/resolv.conf
    cp -a /var/backups/resolv.conf.tmp /etc/resolv.conf
    cp -a /var/backups/resolv.conf.tmp /var/backups/resolv.conf.vanilla
  fi
  sed -i "/^$/d" /var/backups/resolv.conf.vanilla &> /dev/null
  rm -f /etc/resolv.conf
  echo "nameserver 8.8.8.8" > /etc/resolv.conf
  echo "nameserver 8.8.4.4" >> /etc/resolv.conf
  _BROKEN_DNS_TEST=$(host -a omega8.cc 8.8.8.8 -w 5 2>&1)
  if [[ "$_BROKEN_DNS_TEST" =~ "no servers could be reached" ]] && [ -e "/var/backups/resolv.conf.vanilla" ] ; then
    touch /root/.use.local.nameservers.cnf
    rm -f /etc/resolv.conf
    cp -a /var/backups/resolv.conf.vanilla /etc/resolv.conf
    echo "nameserver 8.8.8.8" >> /etc/resolv.conf
    echo "nameserver 8.8.4.4" >> /etc/resolv.conf
  else
    rm -f /etc/resolv.conf
    cp -a /var/backups/resolv.conf.tmp /etc/resolv.conf
  fi
  if [ -e "/etc/pdnsd.conf" ] ; then
    _CUSTOM_DNS_TEST=$(grep 8.8.8.8 /etc/pdnsd.conf 2>&1)
    if [[ "$_CUSTOM_DNS_TEST" =~ "8.8.8.8" ]] && [ -e "/root/.use.local.nameservers.cnf" ] ; then
      echo "        label = \"google-servers\";" > /root/.local.dns.IP.list
      for _IP in `cat /etc/resolv.conf | cut -d ' ' -f2 | sort | uniq`;do echo "        ip=$_IP;" >> /root/.local.dns.IP.list;done
      sed -i "s/ip=8.8.*//g; s/ *$//g; /^$/d" /etc/pdnsd.conf
      sed -i '/        label = \"google-servers\";/ {r /root/.local.dns.IP.list
d;};' /etc/pdnsd.conf
      resolvconf -u                      &> /dev/null
      service pdnsd stop                 &> /dev/null
      rm -f /var/cache/pdnsd/pdnsd.cache &> /dev/null
      service pdnsd start                &> /dev/null
      service pdnsd stop                 &> /dev/null
      rm -f /var/cache/pdnsd/pdnsd.cache &> /dev/null
      service pdnsd start                &> /dev/null
    fi
  fi
}

check_dns_settings () {
  _BROKEN_DNS_TEST=$(host -a omega8.cc 8.8.8.8 -w 5 2>&1)
  if [[ "$_BROKEN_DNS_TEST" =~ "no servers could be reached" ]] || [ -e "/root/.use.local.nameservers.cnf" ] ; then
    _USE_PROVIDER_DNS=YES
    fix_dns_settings
  else
    _USE_PROVIDER_DNS=NO
  fi
}

setup ()
{
  if [ ! -e "/etc/resolv.conf" ] ; then
    if [ -e "/var/backups/resolv.conf.vanilla" ] ; then
      cat /var/backups/resolv.conf.vanilla >/etc/resolv.conf
    fi
    echo "nameserver 8.8.8.8" >>/etc/resolv.conf
    echo "nameserver 8.8.4.4" >>/etc/resolv.conf
    check_dns_settings
  else
    check_dns_settings
  fi
  _CURL_TEST=$(curl -L --max-redirs 10 -k -s --retry 3 --retry-delay 10 -I "http://files.aegir.cc" 2> /dev/null)
  if [[ "$_CURL_TEST" =~ "200 OK" ]] ; then
    _DO_NOTHING=YES
  else
    apt-get clean -qq &> /dev/null
    apt-get update -qq &> /dev/null
    apt-get install curl -y --force-yes --reinstall &> /dev/null
  fi
  _LSB_TEST=$(which lsb_release 2> /dev/null)
  if [[ "$_LSB_TEST" =~ "lsb_release" ]] ; then
    _DO_NOTHING=YES
  else
    apt-get clean -qq &> /dev/null
    apt-get update -qq &> /dev/null
    apt-get install lsb-release -y --force-yes --reinstall &> /dev/null
  fi
  _ADD_LEGACY_SYMLINK=NO
  _PATH_TEST=$(grep 'export PATH' /root/.bashrc)
  if [[ "$_PATH_TEST" =~ "export PATH" ]] ; then
    _DO_NOTHING=YES
  else
    echo "export PATH=\$PATH:/usr/local/bin:/opt/local/bin" >> /root/.bashrc
    _ADD_LEGACY_SYMLINK=YES
  fi
  _PATH_TEST=$(grep '/opt/local/bin' /root/.bashrc)
  if [[ "$_PATH_TEST" =~ "/opt/local/bin" ]] ; then
    _DO_NOTHING=YES
  else
    sed -i "s/^export PATH=.*/export PATH=\$PATH:\/usr\/local\/bin:\/opt\/local\/bin/g" /root/.bashrc &> /dev/null
    _ADD_LEGACY_SYMLINK=YES
  fi
  mkdir -p /usr/local/bin
  mkdir -p /opt/local/bin
  rm -f /opt/local/bin/.{boa*,fix*}
  rm -f /usr/local/bin/{barracuda*,boa*,drushextra*,octopus*,randpass*,sqlmagic*,syncpass*,thinkdifferent*}
  if [ ! -e "/data/disk" ] ; then
    ln -s /opt/local/bin/boa /usr/local/bin/boa
  fi
  if [ "$_ADD_LEGACY_SYMLINK" = "YES" ] ; then
    ln -s /opt/local/bin/barracuda /usr/local/bin/barracuda
    ln -s /opt/local/bin/octopus /usr/local/bin/octopus
  fi
  rm -f /opt/local/bin/{barracuda*,boa*,drushextra*,octopus*,randpass*,sqlmagic*,syncpass*,thinkdifferent*}
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/barracuda"      -o /opt/local/bin/barracuda
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/boa"            -o /opt/local/bin/boa
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/octopus"        -o /opt/local/bin/octopus
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/randpass"       -o /opt/local/bin/randpass
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/sqlmagic"       -o /opt/local/bin/sqlmagic
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/syncpass"       -o /opt/local/bin/syncpass
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/thinkdifferent" -o /opt/local/bin/thinkdifferent
  echo "### $_TODAY ###" >> /opt/local/bin/boa
  echo "### $_TODAY ###" >> /opt/local/bin/barracuda
  echo "### $_TODAY ###" >> /opt/local/bin/octopus
  chmod 700 /opt/local/bin/{boa,barracuda,octopus,syncpass}
  chmod 755 /opt/local/bin/{randpass,sqlmagic,thinkdifferent}
  echo
  echo "BOA Meta Installer setup completed"
  echo "Please check INSTALL.txt and UPGRADE.txt at http://bit.ly/boa-docs for how-to"
  echo "Bye"
  echo
}

###--------------------###
if [ `whoami` = "root" ] ; then
  chmod a+w /dev/null
  if [ ! -e "/dev/fd" ] ; then
    if [ -e "/proc/self/fd" ] ; then
      rm -rf /dev/fd
      ln -s /proc/self/fd /dev/fd
    fi
  fi
  setup
  exit 0
else
  msg "ERROR: This script should be ran as a root user - please `sudo -i` first"
  exit 1
fi

