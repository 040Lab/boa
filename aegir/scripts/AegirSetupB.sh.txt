#!/bin/bash


###----------------------------------------###
###
###  Octopus Aegir Installer
###
###  Copyright (C) 2010-2013 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: http://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

_INSTALLER_VERSION=EDIT_INSTALLER_VERSION


###---### distro config
#
_CIVICRM_M6=EDIT_CIVICRM_M6
_CIVICRM_M7=EDIT_CIVICRM_M7
_CIVICRM_PN=EDIT_CIVICRM_PN
_CIVICRM6=EDIT_CIVICRM6
_COD=EDIT_COD
_COM_MERCE=EDIT_COM_MERCE
_COMMERCE=EDIT_COMMERCE
_D6COMMONS=EDIT_D6COMMONS
_D7COMMONS=EDIT_D7COMMONS
_DRUPAL5=EDIT_DRUPAL5
_DRUPAL7=EDIT_DRUPAL7
_DRUPAL8=EDIT_DRUPAL8
_DRUPAL_EDGE_8=EDIT_DRUPAL_EDGE_8
_ELMS=EDIT_ELMS
_MANAGINGNEWS=EDIT_MANAGINGNEWS
_MART_PLUG=EDIT_MART_PLUG
_MARTPLUG=EDIT_MARTPLUG
_NODESTREAM6=EDIT_NODESTREAM6
_NODESTREAM7=EDIT_NODESTREAM7
_OCTOPUS_VIDEO=EDIT_OCTOPUS_VIDEO
_OPEN_DEALS=EDIT_OPEN_DEALS
_OPENACADEMY=EDIT_OPENACADEMY
_OPENATRIUM=EDIT_OPENATRIUM
_OPENCHURCH=EDIT_OPENCHURCH
_OPENDEALS=EDIT_OPENDEALS
_OPENENTERPRISE=EDIT_OPENENTERPRISE
_OPENOUTREACH=EDIT_OPENOUTREACH
_OPENPUBLIC=EDIT_OPENPUBLIC
_OPENPUBLISH=EDIT_OPENPUBLISH
_OPENSCHOLAR=EDIT_OPENSCHOLAR
_PANOPOLY=EDIT_PANOPOLY
_PROSEPOINT=EDIT_PROSEPOINT
_SMALLCORE_6_LANG=EDIT_SMALLCORE_6_LANG
_SMALLCORE6=EDIT_SMALLCORE6
_SMALLCORE7=EDIT_SMALLCORE7
_SMALLCORE8=EDIT_SMALLCORE8
_UBER_CART_SEVEN=EDIT_UBER_CART_SEVEN
_UBERCART=EDIT_UBERCART
_VIDEOLA=EDIT_VIDEOLA


###---### main config
#
_ADM_EMAIL="EDIT_MY_EMAIL"
_AEGIR_VERSION=EDIT_AEGIR_VERSION
_AUTOPILOT=EDIT_AUTOPILOT
_BOA_REPO_GIT_URL=EDIT_BOA_REPO_GIT_URL
_BOA_REPO_NAME=EDIT_BOA_REPO_NAME
_CLIENT_CORES=EDIT_CLIENT_CORES
_CLIENT_EMAIL="EDIT_CLIENT_EMAIL"
_CLIENT_OPTION=EDIT_CLIENT_OPTION
_DEBUG_MODE=EDIT_DEBUG_MODE
_DISTRO=EDIT_DISTRO
_DOMAIN=EDIT_DOMAIN
_DRUSH_CC_REQ=NO
_DRUSH_VERSION=EDIT_DRUSH_VERSION
_HM_DISTRO=EDIT_HM_DISTRO
_HM_ONLY=EDIT_HM_ONLY
_HTTP_WILDCARD=EDIT_HTTP_WILDCARD
_LAST_HMR=EDIT_LAST_HMR
_LASTNUM=EDIT_LASTNUM
_NOW=EDIT_NOW
_PHP_CLI_VERSION=EDIT_PHP_CLI_VERSION
_PHP_FPM_VERSION=EDIT_PHP_FPM_VERSION
_PLATFORMS_LIST="EDIT_PLATFORMS_LIST"
_PURGE_FOR_SEVEN=EDIT_PURGE_FOR_SEVEN
_PURGE_MODE=EDIT_PURGE_MODE
_SPINNER=EDIT_SPINNER
_STATUS=INIT
_THIS_DB_HOST=EDIT_THIS_DB_HOST
_USE_STOCK=EDIT_USE_STOCK
_WEBG=EDIT_WEBG
#
_USER=EDIT_USER
_ROOT="/data/disk/$_USER"
_AEGIR_ROOT="$_ROOT/aegir/distro/$_HM_DISTRO"
_PREV_AEGIR_ROOT="$_ROOT/aegir/distro/$_LAST_HMR"
#
if [ "$_PHP_CLI_VERSION" != "5.2" ] && [ -x "/opt/local/bin/php" ] ; then
  _L_PHP_CLI=/opt/local/bin
else
  _L_PHP_CLI=/usr/local/bin
fi
_DRUSHCMD="$_L_PHP_CLI/php $_ROOT/tools/drush/drush.php"
if [ "$_PHP_CLI_VERSION" = "5.2" ] && [ -x "/usr/local/bin/php52" ] ; then
  _DRUSHCMD="/usr/local/bin/php52 $_ROOT/tools/drush/drush.php"
fi
#
SHELL=/bin/bash
PATH=$_L_PHP_CLI:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin


###---### Functions
#
# noticeable messages
msg() {
  echo "Octopus [`date`] ==> $*"
}
#
# Small spinner
mrun () {
  CMD="$1"
  touch busy
  if [ "$_SPINNER" = "YES" ] ; then
    bash $_SRCDIR/spinner busy &
  fi
  if $CMD >> $_LOG; then
    rm busy
    sleep 1
    return 0
  fi
}
#
# stop on error
# set -e ### disabled for debugging
#
# Download and extract from dev, then delete.
get_dev_ext () {
  if [ ! -z $1 ] ; then
    wget -q -U iCab http://files.aegir.cc/dev/$_AEGIR_VERSION/$1
    tar -xzf $1
    rm -f $1
  fi
}
#
# Update php-cli for Drush.
update_php_cli_drush () {
  if [ "$_PHP_CLI_VERSION" != "5.2" ] && [ -x "/opt/local/bin/php" ] ; then
    sed -i "s/^#\!\/.*/#\!\/opt\/local\/bin\/php/g"  $_ROOT/tools/drush/drush.php &> /dev/null
  elif [ "$_PHP_CLI_VERSION" = "5.2" ] && [ -x "/usr/local/bin/php52" ] ; then
    sed -i "s/^#\!\/.*/#\!\/usr\/local\/bin\/php52/g"  $_ROOT/tools/drush/drush.php &> /dev/null
  else
    sed -i "s/^#\!\/.*/#\!\/usr\/local\/bin\/php/g"  $_ROOT/tools/drush/drush.php &> /dev/null
  fi
}
#
_SRCDIR=/opt/tmp/files
_LOG=/var/backups/octopus-$_USER-$_NOW.log
#

###---### Checking status
#
if [ -e "$_ROOT/aegir.sh" ] ; then
  _STATUS=UPGRADE
  cd $_ROOT
fi


###---### User check
#
msg "$_STATUS B: Aegir automated install script part B"
if [ `whoami` = "root" ] ; then
  msg "$_STATUS B: FATAL ERROR: This script should be ran as a non-root user"
  msg "$_STATUS B: FATAL ERROR: Aborting AegirSetupB installer NOW!"
  touch /opt/tmp/status-AegirSetupB-FAIL
  exit 1
fi


###---### Add required users and create directories
#
msg "$_STATUS B: Creating directories with correct permissions"
mrun "sleep 1"
if [ -e "$_ROOT/aegir.sh" ] ; then
  rm -f $_ROOT/aegir.sh
fi
touch $_ROOT/aegir.sh
chmod 0755 $_ROOT/aegir.sh &> /dev/null
echo -e "#!/bin/bash\n\nPATH=~/bin:$_L_PHP_CLI:/sbin:/bin:/usr/sbin:/usr/bin\n$_DRUSHCMD '@hostmaster' hosting-dispatch\ntouch $_ROOT/$_USER-task.done" | tee -a $_ROOT/aegir.sh >/dev/null 2>&1

mkdir -p $_ROOT/aegir/distro
mkdir -p $_ROOT/distro/$_DISTRO
mkdir -p $_ROOT/src/$_DISTRO
mkdir -p $_ROOT/src/{modules,themes}
mkdir -p $_ROOT/{tools,log,u,backups,platforms,clients}
chmod 0700 $_ROOT/{log,src,u} &> /dev/null
chmod 0700 $_ROOT/src/$_DISTRO &> /dev/null
chmod 0700 $_ROOT/src/{modules,themes} &> /dev/null
chmod 0711 $_ROOT/{aegir,aegir/distro,distro,platforms,tools} &> /dev/null
chmod 0711 $_ROOT/distro/$_DISTRO &> /dev/null
chmod 0750 $_ROOT/{backups,clients} &> /dev/null

if [ "$_STATUS" = "UPGRADE" ] ; then
 #msg "$_STATUS B: UPGRADE in progress..."
 if [ -d "$_ROOT/distro" ] ; then
  #msg "$_STATUS B: UPGRADE v.2 in progress..."
  if [ -e "$_ROOT/log/domain.txt" ] ; then
   _DOMAIN=`cat $_ROOT/log/domain.txt`
   _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
  fi
  #msg "$_STATUS B: _DOMAIN is $_DOMAIN"
 elif [ ! -d "$_ROOT/distro" ] ; then
  #msg "$_STATUS B: UPGRADE v.1 in progress..."
  #msg "$_STATUS B: _DISTRO is $_DISTRO"
  if [ -e "$_ROOT/log/domain.txt" ] ; then
   _DOMAIN=`cat $_ROOT/log/domain.txt`
   _DOMAIN=`echo -n $_DOMAIN | tr -d "\n"`
  fi
  #msg "$_STATUS B: _DOMAIN is $_DOMAIN"
 fi
else
 true
 #msg "$_STATUS B: NEW AEGIR setup in progress..."
 #msg "$_STATUS B: _DISTRO is $_DISTRO"
 #msg "$_STATUS B: _DOMAIN is $_DOMAIN"
fi
echo $_DOMAIN > $_ROOT/log/domain.txt


###---### Running standard installer
#
msg "$_STATUS B: Running standard installer"
mrun "sleep 1"
if [ "$_STATUS" = "UPGRADE" ] ; then
  mkdir -p $_ROOT/backups/system
  chmod 700 $_ROOT/backups/system
  if [ -d "$_ROOT/aegir/config" ] ; then
    if [ ! -d "$_ROOT/config" ] ; then
      cd $_ROOT/aegir
      mv -f config $_ROOT/config &> /dev/null
      ln -sf $_ROOT/config $_ROOT/aegir/config
    fi
  fi
  if [ -d "$_ROOT/tools/drush" ] ; then
    cd $_ROOT/tools
    mv -f drush $_ROOT/backups/system/drush-pre-$_DISTRO-$_NOW &> /dev/null
  fi
fi
cd $_ROOT/tools
msg "$_STATUS B: Downloading drush, please wait..."
if [ "$_DRUSH_VERSION" = "HEAD" ] ; then
  git clone http://git.drupal.org/project/drush.git &> /dev/null
  rm -f -r $_ROOT/tools/drush/.git &> /dev/null
  _DRUSH_CC_REQ=YES
elif [ "$_DRUSH_VERSION" = "4.6-dev" ] ; then
  get_dev_ext "drush4.tar.gz" &> /dev/null
else
  wget -q -U iCab http://ftp.drupal.org/files/projects/drush-$_DRUSH_VERSION.tar.gz
  tar -xzf drush-$_DRUSH_VERSION.tar.gz
  rm -f drush-$_DRUSH_VERSION.tar.gz
  _DRUSH_CC_REQ=YES
fi
if [ "$_DRUSH_VERSION" = "7.x-4.5" ] || [ "$_DRUSH_VERSION" = "4.6-dev" ] ; then
  sed -i "s/which one she wants./which one she wants.\n  chdir(\$request['base_project_path'])\;/g" $_ROOT/tools/drush/commands/pm/package_handler/wget.inc &> /dev/null
fi

update_php_cli_drush

if [ "$_STATUS" = "UPGRADE" ] ; then
  mkdir -p $_ROOT/backups/system
  chmod 700 $_ROOT/backups/system
  mv -f $_ROOT/backups/drush-pre* $_ROOT/backups/system/ &> /dev/null
  _B_EXT="provision drush_make clean_missing_modules drush_ecl provision_boost provision_cdn provision_civicrm provision_platform_git provision_site_backup provision_tasks_extra registry_rebuild security_check"
  for e in $_B_EXT; do
    if [ -e "$_ROOT/.drush/$e" ] ; then
      mv -f $_ROOT/.drush/$e $_ROOT/backups/system/$e-pre-$_DISTRO-$_NOW &> /dev/null
      mv -f $_ROOT/backups/$e-pre* $_ROOT/backups/system/ &> /dev/null
    fi
  done
fi

if $_DRUSHCMD help > /dev/null ; then
  msg "$_STATUS B: Drush seems to be functioning properly"
else
  msg "$_STATUS B: FATAL ERROR: Drush is broken ($DRUSH help failed)"
  msg "$_STATUS B: FATAL ERROR: Aborting AegirSetupB installer NOW!"
  touch /opt/tmp/status-AegirSetupB-FAIL
  exit 1
fi
msg "$_STATUS B: Installing provision backend in $_ROOT/.drush"
mkdir -p $_ROOT/.drush
cd $_ROOT/.drush
if [ "$_AEGIR_VERSION" = "HEAD" ] ; then
  if [ "$_USE_STOCK" = "YES" ] ; then
    git clone --branch 6.x-2.x-stock-revert git://github.com/omega8cc/provision.git $_ROOT/.drush/provision &> /dev/null
  else
    if [ "$_BOA_REPO_NAME" = "barracuda" ] || [ "$_BOA_REPO_NAME" = "octopus" ] ; then
      _BOA_REPO_GIT_URL_LOCAL="http://git.drupal.org/sandbox/omega8cc"
      git clone $_BOA_REPO_GIT_URL_LOCAL/1074910.git $_ROOT/.drush/provision &> /dev/null
      _BOA_REPO_GIT_URL_Q=${_BOA_REPO_GIT_URL_LOCAL//\//\\\/}
      sed -i "s/MAKEFILE_REPO_GIT_URL/$_BOA_REPO_GIT_URL_Q/g" $_ROOT/.drush/provision/aegir.make &> /dev/null
      sed -i "s/hostmaster.git/1074912.git/g" $_ROOT/.drush/provision/aegir.make &> /dev/null
      rm -f -r $_ROOT/.drush/provision/.git
    else
      git clone $_BOA_REPO_GIT_URL/provision.git &> /dev/null
      _BOA_REPO_GIT_URL_Q=${_BOA_REPO_GIT_URL//\//\\\/}
      sed -i "s/MAKEFILE_REPO_GIT_URL/$_BOA_REPO_GIT_URL_Q/g" $_ROOT/.drush/provision/aegir.make &> /dev/null
      rm -f -r $_ROOT/.drush/provision/.git
    fi
  fi
  if [ "$_STATUS" = "UPGRADE" ] ; then
    get_dev_ext "drush_make.tar.gz" &> /dev/null
  fi
  msg "$_STATUS B: Downloading Drush and Provision extensions, please wait..."
  git clone --branch $_CIVICRM_PN git://github.com/omega8cc/provision_civicrm.git $_ROOT/.drush/provision_civicrm      &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/provision_cdn.git $_ROOT/.drush/provision_cdn                   &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/provision_platform_git.git $_ROOT/.drush/provision_platform_git &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/provision_site_backup.git $_ROOT/.drush/provision_site_backup   &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/remote_import.git $_ROOT/.drush/provision/remote_import         &> /dev/null
  git clone --branch 7.x-1.x-o8 git://github.com/omega8cc/registry_rebuild.git $_ROOT/.drush/registry_rebuild          &> /dev/null
  git clone --branch 7.x-2.x git://github.com/omega8cc/provision_boost.git $_ROOT/.drush/provision_boost               &> /dev/null
  git clone --branch master git://github.com/omega8cc/provision_tasks_extra.git $_ROOT/.drush/provision_tasks_extra    &> /dev/null
  rm -f -r $_ROOT/.drush/*/.git
  get_dev_ext "clean_missing_modules.tar.gz" &> /dev/null
  get_dev_ext "drush_ecl.tar.gz" &> /dev/null
  get_dev_ext "security_check.tar.gz" &> /dev/null
else
  wget -q -U iCab http://files.aegir.cc/versions/provision-$_AEGIR_VERSION.tar.gz
  tar -xzf provision-$_AEGIR_VERSION.tar.gz
  rm provision-$_AEGIR_VERSION.tar.gz
  if [ "$_STATUS" = "UPGRADE" ] ; then
    get_dev_ext "drush_make.tar.gz" &> /dev/null
  fi
  msg "$_STATUS B: Downloading Drush and Provision extensions, please wait..."
  _G_EXT="clean_missing_modules drush_ecl provision_boost provision_cdn provision_civicrm provision_platform_git provision_site_backup provision_tasks_extra registry_rebuild security_check"
  for e in $_G_EXT; do
    get_dev_ext "$e.tar.gz" &> /dev/null
  done
  cd $_ROOT/.drush/provision
  get_dev_ext "remote_import.tar.gz"         &> /dev/null
  cd $_ROOT/.drush
fi
if [ "$_HTTP_WILDCARD" = "YES" ] ; then
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision/http/Provision/Config/Nginx/server.tpl.php         &> /dev/null
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision/http/Provision/Config/Nginx/vhost.tpl.php          &> /dev/null
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision/http/Provision/Config/Nginx/vhost_disabled.tpl.php &> /dev/null
  sed -i "s/\!empty.*';/'*';/g" $_ROOT/.drush/provision_cdn/Provision/Config/cdn.tpl.php                   &> /dev/null
fi

###---### Build Aegir base
#
mrun "sleep 1"
_LOCAL_STATUS="$_STATUS"
if [ -e "/var/run/aegir_upgrade.pid" ] ; then
  _LOCAL_STATUS=INIT
fi
if [ "$_LOCAL_STATUS" = "INIT" ] ; then
  mrun "sleep 1"
  cd $_ROOT
  _AGRPXSWD=`cat $_ROOT/.$_USER.pass.txt`
  _AGRPASWD=`echo -n $_AGRPXSWD | tr -d "\n"`
  _AEGIR_HOST=`uname -n`
  msg "$_STATUS B: Running hostmaster-install, please wait..."
  if [ "$_USE_STOCK" = "YES" ] || [ "$_DRUSH_CC_REQ" = "YES" ] ; then
    $_DRUSHCMD cache-clear drush >$_ROOT/log/install.log 2>&1
  fi
  if [ "$_USE_STOCK" = "YES" ] ; then
    if [ "$_DEBUG_MODE" = "YES" ] ; then
      $_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$_AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$_AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --aegir_db_host=$_THIS_DB_HOST --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION -y -d
    else
      $_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$_AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$_AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --aegir_db_host=$_THIS_DB_HOST --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION -y >$_ROOT/log/install.log 2>&1
    fi
  else
    if [ "$_DEBUG_MODE" = "YES" ] ; then
      $_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$_AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$_AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --db_service_type=mysql --db_port=3306 --aegir_db_host=$_THIS_DB_HOST --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION --profile=hostmaster -y -d
    else
      $_DRUSHCMD hostmaster-install $_DOMAIN --aegir_host=$_AEGIR_HOST --aegir_db_user=$_USER --aegir_db_pass=$_AGRPASWD --aegir_root=$_ROOT --root=$_AEGIR_ROOT --http_service_type=nginx --db_service_type=mysql --db_port=3306 --aegir_db_host=$_THIS_DB_HOST --client_email=$_ADM_EMAIL --script_user=$_USER --web_group=$_WEBG --version=$_AEGIR_VERSION --profile=hostmaster -y >$_ROOT/log/install.log 2>&1
    fi
  fi
  mrun "sleep 1"
  cd $_AEGIR_ROOT
  mkdir -p sites/$_DOMAIN/files/{tmp,js,css}
  chmod 2770 -R sites/$_DOMAIN/files &> /dev/null
  chgrp -R $_WEBG sites/$_DOMAIN/files &> /dev/null
  rm -f $_ROOT/u/$_DOMAIN
  ln -sf $_AEGIR_ROOT $_ROOT/u/$_DOMAIN
  rm -f /data/u/$_DOMAIN
  ln -sf $_AEGIR_ROOT /data/u/$_DOMAIN
  if [ "$_USE_STOCK" = "YES" ] || [ "$_DRUSH_CC_REQ" = "YES" ] ; then
    $_DRUSHCMD cache-clear drush &> /dev/null
  fi
  msg "$_STATUS B: Running hosting-dispatch (1/3), please wait..."
  $_DRUSHCMD '@hostmaster' hosting-dispatch &> /dev/null
  mrun "sleep 5"
  msg "$_STATUS B: Running hosting-dispatch (2/3), please wait..."
  $_DRUSHCMD '@hostmaster' hosting-dispatch &> /dev/null
  mrun "sleep 5"
  msg "$_STATUS B: Running hosting-dispatch (3/3), please wait..."
  $_DRUSHCMD '@hostmaster' hosting-dispatch &> /dev/null
else
  msg "$_STATUS B: Testing previous install..."
  if [ ! -e "$_PREV_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
    _DEBUG_MODE=YES
    msg "$_STATUS B: Testing previous install... OPS, zombie found, moving it to backups..."
    mrun "sleep 1"
    mv -f $_PREV_AEGIR_ROOT $_ROOT/backups/system/empty-host-master-$_LAST_HMR-$_NOW &> /dev/null
    cd $_ROOT/aegir/distro
    list=([0-9]*)
    last=${list[@]: -1}
    _L_LAST_HMR=$last
    nextnum=00$((10#${last%%[^0-9]*} + 1))
    nextnum=${nextnum: -3}
    _L_HM_DISTRO=${nextnum}
    _AEGIR_ROOT="$_ROOT/aegir/distro/$_L_HM_DISTRO"
    _PREV_AEGIR_ROOT="$_ROOT/aegir/distro/$_L_LAST_HMR"
    msg "$_STATUS B: Testing previous install again after removing zombie..."
    mrun "sleep 1"
    if [ ! -e "$_PREV_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
      _DEBUG_MODE=YES
      msg "$_STATUS B: Testing previous install... OPS, another zombie found, moving it to backups..."
      mrun "sleep 1"
      mv -f $_PREV_AEGIR_ROOT $_ROOT/backups/system/empty-host-master-$_L_HM_DISTRO-$_NOW-sec &> /dev/null
      cd $_ROOT/aegir/distro
      list=([0-9]*)
      last=${list[@]: -1}
      _L_LAST_HMR=$last
      nextnum=00$((10#${last%%[^0-9]*} + 1))
      nextnum=${nextnum: -3}
      _L_HM_DISTRO=${nextnum}
      _AEGIR_ROOT="$_ROOT/aegir/distro/$_L_HM_DISTRO"
      _PREV_AEGIR_ROOT="$_ROOT/aegir/distro/$_L_LAST_HMR"
      msg "$_STATUS B: Let's hope there are no more zombies left..."
      mrun "sleep 1"
    fi
  fi
  if [ -d "$_AEGIR_ROOT" ] ; then
    msg "$_STATUS B: FATAL ERROR: $_AEGIR_ROOT already exists - too many zombies to delete!"
    msg "$_STATUS B: FATAL ERROR: Aborting AegirSetupB installer NOW!"
    touch /opt/tmp/status-AegirSetupB-FAIL
    exit 1
  fi
  msg "$_STATUS B: Hostmaster STATUS: upgrade start"
  mrun "sleep 1"
  msg "$_STATUS B: Running hostmaster-migrate, please wait..."
  export DEBIAN_FRONTEND=noninteractive
  cd $_PREV_AEGIR_ROOT
  if [ "$_DEBUG_MODE" = "YES" ] ; then
    $_DRUSHCMD hostmaster-migrate $_DOMAIN $_AEGIR_ROOT -y -d
  else
    $_DRUSHCMD hostmaster-migrate $_DOMAIN $_AEGIR_ROOT -y &> /dev/null
  fi
  export DEBIAN_FRONTEND=text
  rm -f $_ROOT/u/$_DOMAIN
  ln -sf $_AEGIR_ROOT $_ROOT/u/$_DOMAIN
  rm -f /data/u/$_DOMAIN
  ln -sf $_AEGIR_ROOT /data/u/$_DOMAIN
  msg "$_STATUS B: Hostmaster STATUS: upgrade completed"
fi


###--------------------###
if [ "$_LOCAL_STATUS" = "INIT" ] ; then
  _MSG_STATUS="install"
else
  _MSG_STATUS="upgrade"
fi
msg "$_STATUS B: Simple check if Aegir $_MSG_STATUS is successful"
mrun "sleep 1"
if [ -e "$_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
  msg "$_STATUS B: Aegir $_MSG_STATUS test result: OK"
else
  msg "$_STATUS B: FATAL ERROR: Required file $_AEGIR_ROOT/sites/$_DOMAIN/settings.php does not exist"
  msg "$_STATUS B: FATAL ERROR: Aborting AegirSetupB installer NOW!"
  touch /opt/tmp/status-AegirSetupB-FAIL
  exit 1
fi


###---### Enhancing Aegir UI
#
msg "$_STATUS B: Enhancing Aegir UI, please wait..."
mrun "sleep 1"
mkdir -p $_AEGIR_ROOT/sites/all/{modules,themes,libraries}
cd $_AEGIR_ROOT/profiles/hostmaster/modules
get_dev_ext "aegir_custom_settings.tar.gz" &> /dev/null
if [ "$_AEGIR_VERSION" = "HEAD" ] ; then
  git clone --branch 6.x-1.x git://github.com/omega8cc/hosting_civicrm_cron.git  &> /dev/null
  git clone --branch 6.x-1.x git://github.com/omega8cc/hosting_remote_import.git &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/hosting_cdn.git           &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/hosting_platform_git.git  &> /dev/null
  git clone --branch 6.x-2.x git://github.com/omega8cc/hosting_site_backup.git   &> /dev/null
  git clone --branch master git://github.com/omega8cc/hosting_advanced_cron.git  &> /dev/null
  git clone --branch master git://github.com/omega8cc/hosting_tasks_extra.git    &> /dev/null
  rm -f -r */.git
else
  get_dev_ext "hosting_advanced_cron.tar.gz" &> /dev/null
  get_dev_ext "hosting_cdn.tar.gz"           &> /dev/null
  get_dev_ext "hosting_civicrm_cron.tar.gz"  &> /dev/null
  get_dev_ext "hosting_platform_git.tar.gz"  &> /dev/null
  get_dev_ext "hosting_remote_import.tar.gz" &> /dev/null
  get_dev_ext "hosting_site_backup.tar.gz"   &> /dev/null
  get_dev_ext "hosting_tasks_extra.tar.gz"   &> /dev/null
fi
if [ ! -e "$_AEGIR_ROOT/modules/o_contrib" ] ; then
  ln -sf /data/all/001/o_contrib $_AEGIR_ROOT/modules/o_contrib &> /dev/null
fi
cd $_AEGIR_ROOT/sites/$_DOMAIN
if [ -e "$_AEGIR_ROOT/sites/$_DOMAIN/settings.php" ] ; then
  mkdir -p $_ROOT/backups/system/off
  mv -f $_AEGIR_ROOT/sites/$_DOMAIN/modules/* $_ROOT/backups/system/off/ &> /dev/null
  if [ "$_USE_STOCK" = "YES" ] || [ "$_DRUSH_CC_REQ" = "YES" ] ; then
    $_DRUSHCMD dl --destination=$_AEGIR_ROOT/profiles/hostmaster/modules hosting_task_gc-6.x-1.0-alpha1 revision_deletion-6.x-1.x-dev strongarm-6.x-2.2 features-6.x-1.2 features_extra-6.x-1.x-dev ctools-6.x-1.10 hosting_backup_queue-6.x-1.x-dev protect_critical_users-6.x-1.1 userprotect-6.x-1.5 -y &> /dev/null
  fi
  sed -i "s/backup_delete/backup-delete/g" $_AEGIR_ROOT/profiles/hostmaster/modules/hosting_backup_gc/hosting_backup_gc.module &> /dev/null
  sed -i "s/Platform pathauto settings/Platform pathauto/g" $_AEGIR_ROOT/profiles/hostmaster/modules/hosting_platform_pathauto/hosting_platform_pathauto.module &> /dev/null
  sed -i "s/Backup schedule settings/Backup schedule/g" $_AEGIR_ROOT/profiles/hostmaster/modules/hosting_backup_queue/hosting_backup_queue.module &> /dev/null
  sed -i "s/Base path/Platforms path/g" $_AEGIR_ROOT/profiles/hostmaster/modules/hosting_platform_pathauto/hosting_platform_pathauto.module &> /dev/null
  if [[ "$_DOMAIN" =~ ".host8." ]] ; then
    if [[ "$_CHECK_HOST" =~ "v182q.nyc.host8.biz" ]] ; then
      true
    else
      $_DRUSHCMD @hostmaster dis hosting_backup_queue -y &> /dev/null
      $_DRUSHCMD @hostmaster pm-uninstall hosting_backup_queue -y &> /dev/null
      rm -f -r $_AEGIR_ROOT/profiles/hostmaster/modules/hosting_backup_queue
    fi
  fi
  cd $_AEGIR_ROOT/sites/$_DOMAIN
  if [ "$_CLIENT_CORES" -ge "1" ] ; then
    _ALLOW_CIVICRM=YES
  else
    _ALLOW_CIVICRM=NO
  fi
  if [ "$_ALLOW_CIVICRM" = "YES" ] ; then
    $_DRUSHCMD @hostmaster en hosting_civicrm_cron -y &> /dev/null
  fi
  $_DRUSHCMD @hostmaster dis hosting_backup_gc path_alias_cache syslog dblog -y &> /dev/null
  rm -f -r $_AEGIR_ROOT/profiles/hostmaster/modules/hosting_backup_gc
  if [ "$_USE_STOCK" = "YES" ] || [ "$_DRUSH_CC_REQ" = "YES" ] ; then
    $_DRUSHCMD cache-clear drush &> /dev/null
  fi
  $_DRUSHCMD @hostmaster en hosting_advanced_cron revision_deletion hosting_task_gc hosting_tasks_extra hosting_cdn -y &> /dev/null
  $_DRUSHCMD @hostmaster en hosting_client css_emimage protect_critical_users userprotect -y &> /dev/null
  $_DRUSHCMD @hostmaster en hosting_site_backup_manager -y &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_client_register_user 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_admin_client 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_client_send_welcome 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set client 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_feature_client 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set clone 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_client_send_welcome 1 &> /dev/null
  if [ ! -e "$_ROOT/log/custom_cron" ] ; then
    true
  fi
  $_DRUSHCMD @hostmaster vset --always-set hosting_advanced_cron_default_interval 10800 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_queue_advanced_cron_frequency 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_queue_cron_frequency 53222400 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_cron_use_backend 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_ignore_default_profiles 0 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_queue_tasks_frequency 5 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_queue_tasks_items 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_alias_automatic_no_www 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_alias_automatic_www 1 &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_upload_platform_path "/data/disk/$_USER/static" &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_upload_upload_path "sites/$_DOMAIN/files/deployment" &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_platform_pathauto_base_path "/data/disk/$_USER/static/" &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set hosting_site_backup_manager_base_path "/data/disk/$_USER" &> /dev/null
  $_DRUSHCMD @hostmaster en aegir_custom_settings -y &> /dev/null
  $_DRUSHCMD @hostmaster fr aegir_custom_settings -y &> /dev/null
  $_DRUSHCMD @hostmaster vset --always-set site_footer "" &> /dev/null
  if [ "$_LOCAL_STATUS" = "INIT" ] ; then
    $_DRUSHCMD @hostmaster vset --always-set site_name "Aegir Hosting System by Octopus" &> /dev/null
    $_DRUSHCMD @hostmaster vset --always-set site_mail "$_ADM_EMAIL" &> /dev/null
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_home.php.txt ./
    mv -f make_home.php.txt make_home.php &> /dev/null
    $_DRUSHCMD php-script make_home &> /dev/null
    rm -f make_home.php
    cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/helpers/make_client.php.txt ./
    mv -f make_client.php.txt make_client.php &> /dev/null
    if [ "$_THIS_DB_HOST" = "localhost" ] ; then
      $_DRUSHCMD @hostmaster sqlq "UPDATE hosting_platform SET status=-1 WHERE nid=7" &> /dev/null
    else
      $_DRUSHCMD @hostmaster sqlq "UPDATE hosting_platform SET status=-1 WHERE nid=5" &> /dev/null
    fi
    $_DRUSHCMD php-script make_client $_CLIENT_EMAIL &> /dev/null
    rm -f make_client.php
    $_DRUSHCMD @hostmaster urol "admin" --mail=$_CLIENT_EMAIL &> /dev/null
    $_DRUSHCMD @hostmaster urol "aegir account manager" --mail=$_CLIENT_EMAIL &> /dev/null
  fi
  $_DRUSHCMD @hostmaster sqlq "REPLACE INTO userprotect VALUES (0,0,0,0,0,1,1,1,'user',1),(1,0,0,0,0,0,0,0,'admin',0),(1,1,1,1,1,1,1,1,'user',1),(3,0,0,0,0,1,1,0,'user',1)" &> /dev/null
  $_DRUSHCMD @hostmaster cc all &> /dev/null
fi


###---### Aegir global.inc file
#
cd $_ROOT
if [ -e "/data/conf/global.inc" ] ; then
  ln -sf /data/conf/global.inc $_ROOT/config/includes/global.inc
else
  cp -af /opt/tmp/$_BOA_REPO_NAME/aegir/conf/global.inc /data/conf/global.inc
  ln -sf /data/conf/global.inc $_ROOT/config/includes/global.inc
fi

touch /opt/tmp/status-AegirSetupB-OK

###----------------------------------------###
###
###  Octopus Aegir Installer
###  Copyright (C) 2010-2013 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###----------------------------------------###

