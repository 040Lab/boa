#!/bin/bash

PATH=/usr/local/sbin:/usr/local/bin:/opt/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
SHELL=/bin/bash
_NOW=`date +%y%m%d-%H%M`

# Remove dangerous stuff from the string.
sanitize_string () {
  echo "$1" | sed 's/[\`\#\"\{\(\$\@]//g' | sed 's/\(['"'"'\]\)//g'
}

check_generate () {
  if [ -e "$_L_SYS" ] ; then
    _ESC_APASS=`cat $_L_SYS`
  else
    _ESC_APASS=$(randpass 32 esc)
    echo "$_ESC_APASS" > $_L_SYS
  fi
  _ESC_APASS=`echo -n $_ESC_APASS | tr -d "\n"`
  _ENC_APASS=$(python -c "import urllib; print urllib.quote('''$_ESC_APASS''')")
  _LEN_APASS=$(echo ${#_ESC_APASS})
  if [ -z "$_ESC_APASS" ] || [ $_LEN_APASS -lt 19 ] ; then
    _ESC_APASS=`pwgen -v -s -1`
    _ESC_APASS=`sanitize_string "$_ESC_APASS"`
    _ESC_APASS=`echo -n $_ESC_APASS | tr -d "\n"`
    _ENC_APASS="$_ESC_APASS"
    echo "$_ESC_APASS" > $_L_SYS
    chmod 0600 $_L_SYS
  fi
}

do_syncpass () {
  if [ ! -z "$uname" ] ; then
    if [ "$uname" = "aegir" ] && [ -e "/var/aegir/backups" ] ; then
      _L_SYS="/var/aegir/backups/system/.aegir_root.pass.txt"
      cp /var/aegir/.drush/server_localhost.alias.drushrc.php /var/backups/server_localhost.alias.drushrc.php.$uname-bak-$_NOW &> /dev/null
      cp /var/aegir/.drush/server_master.alias.drushrc.php /var/backups/server_master.alias.drushrc.php.$uname-bak-$_NOW &> /dev/null
      check_generate
      chown $uname:$uname $_L_SYS &> /dev/null
      su -s /bin/bash - $uname -c "drush @hostmaster sqlq \"UPDATE hosting_db_server SET db_passwd='$_ESC_APASS' WHERE db_user='aegir_root'\" &> /dev/null"
      sed -i "s/mysql:\/\/aegir_root:.*/mysql:\/\/aegir_root:$_ENC_APASS@localhost',/g" /var/aegir/.drush/server_localhost.alias.drushrc.php &> /dev/null
      sed -i "s/mysql:\/\/aegir_root:.*/mysql:\/\/aegir_root:$_ENC_APASS@localhost',/g" /var/aegir/.drush/server_master.alias.drushrc.php &> /dev/null
      echo "Fixed Aegir Master Instance system user=aegir_root with new system password=$_ESC_APASS encoded=$_ENC_APASS"
    else
      if [ -e "/data/disk/$uname" ] ; then
        _L_SYS="/data/disk/$uname/.$uname.pass.txt"
        cp /data/disk/$uname/.drush/server_localhost.alias.drushrc.php /var/backups/server_localhost.alias.drushrc.php.$uname-bak-$_NOW &> /dev/null
        cp /data/disk/$uname/.drush/server_master.alias.drushrc.php /var/backups/server_master.alias.drushrc.php.$uname-bak-$_NOW &> /dev/null
        check_generate
        chown $uname:users $_L_SYS &> /dev/null
        su -s /bin/bash - $uname -c "drush @hostmaster sqlq \"UPDATE hosting_db_server SET db_passwd='$_ESC_APASS' WHERE db_user='$uname'\" &> /dev/null"
        sed -i "s/mysql:\/\/$uname:.*/mysql:\/\/$uname:$_ENC_APASS@localhost',/g" /data/disk/$uname/.drush/server_localhost.alias.drushrc.php &> /dev/null
        sed -i "s/mysql:\/\/$uname:.*/mysql:\/\/$uname:$_ENC_APASS@localhost',/g" /data/disk/$uname/.drush/server_master.alias.drushrc.php &> /dev/null
        echo "Fixed Aegir Satellite Instance system user=$uname with new system password=$_ESC_APASS encoded=$_ENC_APASS"
      else
        echo "You must specify the existing Aegir instance username to fix"
        exit 1
      fi
    fi
    exit 0
  else
    echo "You must specify the existing Aegir instance username to fix"
    exit 1
  fi
}

check_root ()
{
  if [ `whoami` = "root" ] ; then
    true
  else
    echo "ERROR: This script should be ran as a root user - please `sudo -i` first"
    exit 1
  fi
}

check_root

case "$1" in
  fix) uname="$2"
       do_syncpass
  ;;
  *)   echo "Usage: syncpass fix {aegir|o1}"
       exit 1
  ;;
esac

