#!/bin/bash


###----------------------------------------###
###
###  BOA Meta Installer
###
###  Copyright (C) 2010-2014 Omega8.cc
###  noc@omega8.cc www.omega8.cc
###
###  This program is free software. You can
###  redistribute it and/or modify it under
###  the terms of the GNU GPL as published by
###  the Free Software Foundation, version 2
###  or later.
###
###  This program is distributed in the hope
###  that it will be useful, but WITHOUT ANY
###  WARRANTY; without even the implied
###  warranty of MERCHANTABILITY or FITNESS
###  FOR A PARTICULAR PURPOSE. See the GNU GPL
###  for more details.
###
###  You should have received a copy of the
###  GNU GPL along with this program.
###  If not, see http://www.gnu.org/licenses/
###
###  Code: https://code.aegir.cc/aegir
###
###----------------------------------------###


###----------------------------------------###
### HOW-TO: run it with bash, not with sh  ###
###----------------------------------------###
###
###   bash BOA.sh.txt
###

###----------------------------------------###
### DON'T EDIT ANYTHING BELOW THIS LINE    ###
###----------------------------------------###

export PATH=$PATH:/opt/local/bin
SHELL=/bin/bash
_TODAY=`date +%y%m%d`
_INSTALLER_VERSION=BOA-2.3.9-dev

fix_dns_settings () {
  mkdir -p /var/backups
  rm -f /var/backups/resolv.conf.tmp
  if [ -e "/etc/resolv.conf" ] ; then
    cp -a /etc/resolv.conf /var/backups/resolv.conf.tmp
  fi
  if [ ! -e "/var/backups/resolv.conf.vanilla" ] ; then
    for Pre in `ls -la /var/backups/resolv.conf.pre-*` ; do
      if [ -e "$Pre" ] && [ -f "$Pre" ] && [ ! -L "$Pre" ] ; then
        cp -a $Pre /var/backups/resolv.conf.vanilla
      fi
    done
  fi
  if [ ! -e "/var/backups/resolv.conf.vanilla" ] ; then
    rm -f /etc/resolv.conf
    cp -a /var/backups/resolv.conf.tmp /etc/resolv.conf
    cp -a /var/backups/resolv.conf.tmp /var/backups/resolv.conf.vanilla
  fi
  sed -i "/^$/d" /var/backups/resolv.conf.vanilla &> /dev/null
  rm -f /etc/resolv.conf
  echo "nameserver 8.8.8.8" > /etc/resolv.conf
  echo "nameserver 8.8.4.4" >> /etc/resolv.conf
  _BROKEN_DNS_TEST=$(host -a omega8.cc 8.8.8.8 -w 10 2>&1)
  if [[ "$_BROKEN_DNS_TEST" =~ "no servers could be reached" ]] && [ -e "/var/backups/resolv.conf.vanilla" ] ; then
    touch /root/.use.local.nameservers.cnf
    rm -f /etc/resolv.conf
    cp -a /var/backups/resolv.conf.vanilla /etc/resolv.conf
    echo "nameserver 8.8.8.8" >> /etc/resolv.conf
    echo "nameserver 8.8.4.4" >> /etc/resolv.conf
  else
    rm -f /etc/resolv.conf
    cp -a /var/backups/resolv.conf.tmp /etc/resolv.conf
  fi
  if [ -e "/etc/pdnsd.conf" ] ; then
    if [ -e "/root/.local.dns.IP.list" ] ; then
      sed -i "s/.*127.0.0.1.*//g; s/ *$//g; /^$/d" /root/.local.dns.IP.list
      sed -i "s/.*Dynamic.*//g; s/ *$//g; /^$/d"   /root/.local.dns.IP.list
      _BROKEN_DNS_TEST=$(grep "\." /root/.local.dns.IP.list 2>&1)
      if [ -z "$_BROKEN_DNS_TEST" ] ; then
        echo "        label = \"google-servers\";" > /root/.local.dns.IP.list
        echo "        ip=8.8.8.8;" >> /root/.local.dns.IP.list
        echo "        ip=8.8.4.4;" >> /root/.local.dns.IP.list
      fi
    fi
    _CUSTOM_DNS_TEST=$(grep 8.8.8.8 /etc/pdnsd.conf 2>&1)
    _BROKEN_DNS_CONF=$(grep "ip=Dynamic" /etc/pdnsd.conf 2>&1)
    if [[ "$_CUSTOM_DNS_TEST" =~ "8.8.8.8" ]] || [[ "$_BROKEN_DNS_CONF" =~ "Dynamic" ]] ; then
      if [ -e "/root/.use.local.nameservers.cnf" ] ; then
        echo "        label = \"google-servers\";" > /root/.local.dns.IP.list
        for _IP in `cat /etc/resolv.conf | sed 's/.*127.0.0.1.*//g; s/.*Dynamic.*//g' | cut -d ' ' -f2 | sort | uniq`;do echo "        ip=$_IP;" >> /root/.local.dns.IP.list;done
        sed -i "s/ip=8.8.*//g; s/ *$//g; /^$/d" /etc/pdnsd.conf
        sed -i "s/ip=127.*//g; s/ *$//g; /^$/d" /etc/pdnsd.conf
        sed -i "s/ip=Dyn.*//g; s/ *$//g; /^$/d" /etc/pdnsd.conf
        sed -i "s/.*127.0.0.1.*//g; s/ *$//g; /^$/d" /root/.local.dns.IP.list
        sed -i "s/.*Dynamic.*//g; s/ *$//g; /^$/d"   /root/.local.dns.IP.list
        _BROKEN_DNS_TEST=$(grep "\." /root/.local.dns.IP.list 2>&1)
        if [ -z "$_BROKEN_DNS_TEST" ] ; then
           echo "        ip=8.8.8.8;" >> /root/.local.dns.IP.list
           echo "        ip=8.8.4.4;" >> /root/.local.dns.IP.list
        fi
        sed -i '/        label = \"google-servers\";/ {r /root/.local.dns.IP.list
d;};' /etc/pdnsd.conf
        resolvconf -u                      &> /dev/null
        service pdnsd stop                 &> /dev/null
        rm -f /var/cache/pdnsd/pdnsd.cache &> /dev/null
        service pdnsd start                &> /dev/null
        service pdnsd stop                 &> /dev/null
        rm -f /var/cache/pdnsd/pdnsd.cache &> /dev/null
        service pdnsd start                &> /dev/null
      fi
    fi
  fi
}

check_dns_settings () {
  _BROKEN_DNS_TEST=$(host -a omega8.cc 8.8.8.8 -w 10 2>&1)
  if [[ "$_BROKEN_DNS_TEST" =~ "no servers could be reached" ]] || [ -e "/root/.use.local.nameservers.cnf" ] ; then
    _USE_PROVIDER_DNS=YES
    fix_dns_settings
  else
    _USE_PROVIDER_DNS=NO
  fi
}

update_agents ()
{
  if [ -e "/opt/etc/fpm/fpm-pool-common.conf" ] && [ -e "/var/xdrago" ] && [ ! -e "/var/xdrago/log/minute.fixed.p88.pid" ] ; then
    mv -f /var/xdrago/minute.sh /var/xdrago/minute.sh.old
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/system/minute.sh" -o /var/xdrago/minute.sh
    if [ -e "/var/xdrago/minute.sh" ] ; then
      chmod 700 /var/xdrago/minute.sh
      chown root:root /var/xdrago/minute.sh
      touch /var/xdrago/log/minute.fixed.p88.pid
    else
      mv -f /var/xdrago/minute.sh.old /var/xdrago/minute.sh
    fi
  fi
  if [ -e "/opt/etc/fpm/fpm-pool-common.conf" ] && [ -e "/var/xdrago" ] && [ ! -e "/var/xdrago/log/clear.fixed.p88.pid" ] ; then
    mv -f /var/xdrago/clear.sh /var/xdrago/clear.sh.old
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/system/clear.sh" -o /var/xdrago/clear.sh
    if [ -e "/var/xdrago/clear.sh" ] ; then
      chmod 700 /var/xdrago/clear.sh
      chown root:root /var/xdrago/clear.sh
      touch /var/xdrago/log/clear.fixed.p88.pid
    else
      mv -f /var/xdrago/clear.sh.old /var/xdrago/clear.sh
    fi
  fi
  if [ -e "/opt/etc/fpm/fpm-pool-common.conf" ] && [ -e "/var/xdrago" ] && [ ! -e "/var/xdrago/log/daily.fixed.a10z.pid" ] ; then
    mv -f /var/xdrago/daily.sh /var/xdrago/daily.sh.old
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/system/daily.sh" -o /var/xdrago/daily.sh
    if [ -e "/var/xdrago/daily.sh" ] ; then
      chmod 700 /var/xdrago/daily.sh
      chown root:root /var/xdrago/daily.sh
      touch /var/xdrago/log/daily.fixed.a10z.pid
    else
      mv -f /var/xdrago/daily.sh.old /var/xdrago/daily.sh
    fi
  fi
  if [ -e "/opt/etc/fpm/fpm-pool-common.conf" ] && [ -e "/var/xdrago" ] && [ ! -e "/var/xdrago/log/manage_ltd_users.fixed.p88.pid" ] ; then
    mv -f /var/xdrago/manage_ltd_users.sh /var/xdrago/manage_ltd_users.sh.old
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/system/manage_ltd_users.sh" -o /var/xdrago/manage_ltd_users.sh
    if [ -e "/var/xdrago/manage_ltd_users.sh" ] ; then
      chmod 700 /var/xdrago/manage_ltd_users.sh
      chown root:root /var/xdrago/manage_ltd_users.sh
      touch /var/xdrago/log/manage_ltd_users.fixed.p88.pid
    else
      mv -f /var/xdrago/manage_ltd_users.sh.old /var/xdrago/manage_ltd_users.sh
    fi
  fi
  if [ -e "/opt/etc/fpm/fpm-pool-common.conf" ] && [ -e "/var/xdrago" ] && [ ! -e "/var/xdrago/log/websh.fixed.p88.pid" ] ; then
    mv -f /bin/websh /var/xdrago/websh.sh.old
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/helpers/websh.sh.txt" -o /bin/websh
    if [ -e "/bin/websh" ] ; then
      chmod 755 /bin/websh
      chown root:root /bin/websh
      touch /var/xdrago/log/websh.fixed.p88.pid
    else
      mv -f /var/xdrago/websh.sh.old /bin/websh
    fi
  fi
}

fix_core ()
{
  # https://www.drupal.org/SA-CORE-2014-005
  sed -i "s/^_PERMISSIONS_FIX=.*/_PERMISSIONS_FIX=YES/g" /root/.barracuda.cnf &> /dev/null
  if [ -e "/var/xdrago" ] && [ ! -e "/var/xdrago/conf/SA-CORE-2014-005-D7.patch" ] ; then
    mkdir -p /var/xdrago/conf
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/patches/7-core/SA-CORE-2014-005-D7.patch" -o /var/xdrago/conf/SA-CORE-2014-005-D7.patch
  fi
  if [ -e "/var/xdrago" ] && [ -e "/var/xdrago/conf/SA-CORE-2014-005-D7.patch" ] && [ ! -e "/var/xdrago/log/SA-CORE-2014-005-fixed-d7.log" ] ; then
    if [ -d "/data/all/000/core" ] ; then
      for Core in `find /data/all/000/core/drupal-7* -maxdepth 0 -mindepth 0 | sort`; do
        cd $Core
        patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
      done
    elif [ -d "/data/disk/all/000/core" ] ; then
      for Core in `find /data/disk/all/000/core/drupal-7* -maxdepth 0 -mindepth 0 | sort`; do
        cd $Core
        patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
      done
    fi
    touch /var/xdrago/log/SA-CORE-2014-005-fixed-d7.log
    cd
  fi
  # https://www.drupal.org/SA-CORE-2014-005 for ancient platforms
  if [ -e "/var/xdrago" ] && [ -e "/var/xdrago/conf/SA-CORE-2014-005-D7.patch" ] ; then
    if [ -d "/data/all" ] && [ ! -e "/var/xdrago/log/legacy-SA-CORE-2014-005-fixed-d7.log" ] ; then
      for File in `find /data/all/*/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
        fi
      done
      touch /var/xdrago/log/legacy-SA-CORE-2014-005-fixed-d7.log
    elif [ -d "/data/disk/all" ] && [ ! -e "/var/xdrago/log/legacy-SA-CORE-2014-005-fixed-d7eee.log" ] ; then
      for File in `find /data/disk/all/*/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
        fi
      done
      touch /var/xdrago/log/legacy-SA-CORE-2014-005-fixed-d7eee.log
    fi
    cd
  fi
  # https://www.drupal.org/SA-CORE-2014-005 for custom platforms
  if [ -e "/var/xdrago" ] && [ -e "/var/xdrago/conf/SA-CORE-2014-005-D7.patch" ] ; then
    if [ -d "/data/disk" ] && [ ! -e "/var/xdrago/log/batch-custom-SA-CORE-2014-005-fixed-d7.log" ] ; then
      for File in `find /data/disk/*/static/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] && [ ! -e "$Core/profiles/SA-CORE-2014-005-D7-fix.info" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
          echo fixed > $Core/profiles/SA-CORE-2014-005-D7-fix.info
        fi
      done
      for File in `find /data/disk/*/static/*/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] && [ ! -e "$Core/profiles/SA-CORE-2014-005-D7-fix.info" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
          echo fixed > $Core/profiles/SA-CORE-2014-005-D7-fix.info
        fi
      done
      for File in `find /data/disk/*/static/*/*/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] && [ ! -e "$Core/profiles/SA-CORE-2014-005-D7-fix.info" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
          echo fixed > $Core/profiles/SA-CORE-2014-005-D7-fix.info
        fi
      done
      for File in `find /data/disk/*/static/*/*/*/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] && [ ! -e "$Core/profiles/SA-CORE-2014-005-D7-fix.info" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
          echo fixed > $Core/profiles/SA-CORE-2014-005-D7-fix.info
        fi
      done
      for File in `find /data/disk/*/static/*/*/*/*/*/includes/database/database.inc -maxdepth 0 -mindepth 0 | sort`; do
        Core=$(echo $File | sed 's/\/includes.*//g'| awk '{print $1}' 2> /dev/null)
        if [ -d "$Core" ] && [ ! -e "$Core/profiles/SA-CORE-2014-005-D7-fix.info" ] ; then
          cd $Core
          patch -p1 < /var/xdrago/conf/SA-CORE-2014-005-D7.patch &> /dev/null
          echo fixed > $Core/profiles/SA-CORE-2014-005-D7-fix.info
        fi
      done
    fi
    cd
    touch /var/xdrago/log/batch-custom-SA-CORE-2014-005-fixed-d7.log
  fi
}

fix_alt ()
{
  if [ -x "/usr/lib/jvm/java-6-openjdk/jre/bin/java" ] ; then
    if [ ! -e "/usr/bin/java" ] || [ ! -e "/etc/alternatives/java" ] ; then
      ln -sf /usr/lib/jvm/java-6-openjdk/jre/bin/java /etc/alternatives/java
      ln -sf /etc/alternatives/java /usr/bin/java
      echo fixed java symlinks
    fi
  fi
}

setup ()
{
  sed -i "s/.*files.aegir.cc.*//g" /etc/hosts
  echo >>/etc/hosts
  sed -i "/^$/d" /etc/hosts
  if [ ! -e "/etc/resolv.conf" ] ; then
    if [ -e "/var/backups/resolv.conf.vanilla" ] ; then
      cat /var/backups/resolv.conf.vanilla >/etc/resolv.conf
    fi
    echo "nameserver 8.8.8.8" >>/etc/resolv.conf
    echo "nameserver 8.8.4.4" >>/etc/resolv.conf
    check_dns_settings
  else
    check_dns_settings
  fi
  _CURL_TEST=$(curl -L --max-redirs 10 -k -s --retry 3 --retry-delay 10 -I "http://files.aegir.cc" 2> /dev/null)
  if [[ "$_CURL_TEST" =~ "200 OK" ]] ; then
    _DO_NOTHING=YES
  else
    apt-get clean -qq &> /dev/null
    apt-get update -qq &> /dev/null
    apt-get install curl -y --force-yes --reinstall &> /dev/null
  fi
  _LSB_TEST=$(which lsb_release 2> /dev/null)
  if [[ "$_LSB_TEST" =~ "lsb_release" ]] ; then
    _DO_NOTHING=YES
  else
    apt-get clean -qq &> /dev/null
    apt-get update -qq &> /dev/null
    apt-get install lsb-release -y --force-yes --reinstall &> /dev/null
  fi
  _ADD_LEGACY_SYMLINK=NO
  _PATH_TEST=$(grep 'export PATH' /root/.bashrc)
  if [[ "$_PATH_TEST" =~ "export PATH" ]] ; then
    _DO_NOTHING=YES
  else
    echo "export PATH=\$PATH:/usr/local/bin:/opt/local/bin" >> /root/.bashrc
    _ADD_LEGACY_SYMLINK=YES
  fi
  _PATH_TEST=$(grep '/opt/local/bin' /root/.bashrc)
  if [[ "$_PATH_TEST" =~ "/opt/local/bin" ]] ; then
    _DO_NOTHING=YES
  else
    sed -i "s/^export PATH=.*/export PATH=\$PATH:\/usr\/local\/bin:\/opt\/local\/bin/g" /root/.bashrc &> /dev/null
    _ADD_LEGACY_SYMLINK=YES
  fi
  mkdir -p /usr/local/bin
  mkdir -p /opt/local/bin
  rm -f /opt/local/bin/.{boa*,fix*}
  rm -f /usr/local/bin/{autoupboa*,backboa*,barracuda*,boa*,drushextra*,octopus*,randpass*,sqlmagic*,syncpass*,thinkdifferent*}
  if [ ! -e "/data/disk" ] ; then
    ln -s /opt/local/bin/boa /usr/local/bin/boa
  fi
  if [ "$_ADD_LEGACY_SYMLINK" = "YES" ] ; then
    ln -s /opt/local/bin/barracuda /usr/local/bin/barracuda
    ln -s /opt/local/bin/octopus /usr/local/bin/octopus
  fi
  rm -f /opt/local/bin/{autoupboa*,backboa*,barracuda*,boa*,drushextra*,octopus*,randpass*,sqlmagic*,syncpass*,thinkdifferent*}
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/autoupboa"      -o /opt/local/bin/autoupboa
  if [ `ps aux | grep -v "grep" | grep --count "duplicity"` -gt 0 ]; then
    echo "The duplicity backup is running!"
  else
    curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/backboa"      -o /opt/local/bin/backboa
  fi
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/barracuda"      -o /opt/local/bin/barracuda
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/boa"            -o /opt/local/bin/boa
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/octopus"        -o /opt/local/bin/octopus
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/randpass"       -o /opt/local/bin/randpass
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/sqlmagic"       -o /opt/local/bin/sqlmagic
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/syncpass"       -o /opt/local/bin/syncpass
  curl -L --max-redirs 10 -k -s --retry 10 --retry-delay 5 -A iCab "http://files.aegir.cc/versions/master/aegir/tools/bin/thinkdifferent" -o /opt/local/bin/thinkdifferent
  echo "### $_TODAY ###" >> /opt/local/bin/boa
  echo "### $_TODAY ###" >> /opt/local/bin/barracuda
  echo "### $_TODAY ###" >> /opt/local/bin/octopus
  chmod 700 /opt/local/bin/{autoupboa,backboa,barracuda,boa,octopus,syncpass}
  chmod 755 /opt/local/bin/{randpass,sqlmagic,thinkdifferent}
  echo
  echo "BOA Meta Installer setup completed"
  echo "Please check INSTALL.txt and UPGRADE.txt at http://bit.ly/boa-docs for how-to"
  echo "Bye"
  echo
}

###--------------------###
if [ `whoami` = "root" ] ; then
  chmod a+w /dev/null
  if [ ! -e "/dev/fd" ] ; then
    if [ -e "/proc/self/fd" ] ; then
      rm -rf /dev/fd
      ln -s /proc/self/fd /dev/fd
    fi
  fi
  setup
  fix_alt
  if [ -e "/var/log/barracuda_log.txt" ] ; then
    _VERSIONS_TEST=`cat /var/log/barracuda_log.txt`
    if [[ "$_VERSIONS_TEST" =~ "$_INSTALLER_VERSION" ]] ; then
      _VERSIONS_TEST_RESULT=OK
    else
      update_agents
      fix_core
    fi
  fi
  exit 0
else
  msg "ERROR: This script should be ran as a root user - please `sudo -i` first"
  exit 1
fi

