#!/bin/bash

PATH=/usr/local/sbin:/usr/local/bin:/opt/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
SHELL=/bin/bash

_TODAY=`date +%y%m%d`
_NOW=`date +%y%m%d-%H%M`
_CHECK_HOST=`uname -n`
_LOG_DIR="/var/backups/reports/up/$(basename "$0")/$_TODAY"
_UP_CONTRIB_PID="$_LOG_DIR/$(basename "$0")-contrib-up.pid"
_L_VMFAMILY=XEN
_L_VM_TEST=`uname -a 2>&1`
if [[ "$_L_VM_TEST" =~ beng ]] ; then
  _L_VMFAMILY="VS"
fi

send_report ()
{
  if [ -e "/root/.barracuda.cnf" ] ; then
    source /root/.barracuda.cnf
    if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] || [ "$_L_VMFAMILY" = "VS" ] ; then
      _MY_EMAIL="$(basename "$0")@omega8.cc"
    fi
    if [ ! -z "$_MY_EMAIL" ] ; then
      cat $_UP_LOG | mail -e -s "REPORT: Successful Octopus upgrade for $_THIS_HM_USER on $_CHECK_HOST at $_NOW" $_MY_EMAIL
      echo "REPORT: Successful Octopus upgrade for $_THIS_HM_USER on $_CHECK_HOST sent to $_MY_EMAIL"
    fi
  fi
}

send_alert ()
{
  if [ -e "/root/.barracuda.cnf" ] ; then
    source /root/.barracuda.cnf
    if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] || [ "$_L_VMFAMILY" = "VS" ] ; then
      _MY_EMAIL="$(basename "$0")@omega8.cc"
    fi
    if [ ! -z "$_MY_EMAIL" ] ; then
      cat $_UP_LOG | mail -e -s "ALERT: Failed Octopus upgrade for $_THIS_HM_USER on $_CHECK_HOST at $_NOW" $_MY_EMAIL
      echo "ALERT: Failed Octopus upgrade for $_THIS_HM_USER on $_CHECK_HOST sent to $_MY_EMAIL"
    fi
  fi
}

check_report ()
{
  _SEND_ALERT=NO
  _RESULT_BYE=$(grep "BYE" $_UP_LOG)
  if [[ "$_RESULT_BYE" =~ "BYE" ]] ; then
    true
  else
    _SEND_ALERT=YES
  fi
  _RESULT_ALRT=$(grep "ALRT:" $_UP_LOG)
  if [[ "$_RESULT_ALRT" =~ "ALRT:" ]] ; then
    _SEND_ALERT=YES
  fi
  _RESULT_ABORTING=$(grep "Aborting" $_UP_LOG)
  if [[ "$_RESULT_ABORTING" =~ "Aborting" ]] ; then
    _SEND_ALERT=YES
  fi
  _RESULT_ALREADY=$(grep "This Aegir Instance is already up to date" $_UP_LOG)
  if [[ "$_RESULT_ALREADY" =~ "This Aegir Instance is already up to date" ]] ; then
    _SEND_ALERT=NO
  fi
  if [ "$_SEND_ALERT" = "YES" ] ; then
    send_alert
  else
    send_report
  fi
}

up_mode ()
{
  if [ "$mcmode" = "aegir" ] ; then
    sed -i "s/^_HM_ONLY=NO/_HM_ONLY=YES/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    bash /var/backups/OCTOPUS.sh.$_THIS_HM_USER
    touch $User/log/up-$_TODAY
  elif [ "$mcmode" = "platforms" ] ; then
    sed -i "s/^_PLATFORMS_ONLY=NO/_PLATFORMS_ONLY=YES/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    bash /var/backups/OCTOPUS.sh.$_THIS_HM_USER
    touch $User/log/up-$_TODAY
  elif [ "$mcmode" = "both" ] ; then
    sed -i "s/^_HM_ONLY=YES/_HM_ONLY=NO/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    sed -i "s/^_HM_ONLY=YES/_HM_ONLY=NO/g" /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
    sed -i "s/^_PLATFORMS_ONLY=YES/_PLATFORMS_ONLY=NO/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    sed -i "s/^_PLATFORMS_ONLY=YES/_PLATFORMS_ONLY=NO/g" /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
    bash /var/backups/OCTOPUS.sh.$_THIS_HM_USER
    touch $User/log/up-$_TODAY
  else
    bash /var/backups/OCTOPUS.sh.$_THIS_HM_USER
    touch $User/log/up-$_TODAY
  fi
}

up_one ()
{
  if [ -e "/var/backups/OCTOPUS.sh.txt" ] ; then
    cp -af /var/backups/OCTOPUS.sh.txt                   /var/backups/OCTOPUS.sh.$_THIS_HM_USER
    sed -i "s/^_AUTOPILOT=NO/_AUTOPILOT=YES/g"           /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    sed -i "s/^_DNS_SETUP_TEST=YES/_DNS_SETUP_TEST=NO/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    sed -i "s/^_USER=o1/_USER=$_THIS_HM_USER/g"          /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
    if [ -e "/root/.host8.cnf" ] || [[ "$_CHECK_HOST" =~ ".host8." ]] || [ "$_L_VMFAMILY" = "VS" ] ; then
      if [[ "$_CHECK_HOST" =~ "v182q.nyc.host8.biz" ]] ; then
        true
      else
        sed -i "s/^_STRONG_PASSWORDS=NO/_STRONG_PASSWORDS=YES/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
        sed -i "s/D7P D7S D7D D6P D6S D6D OAM/ALL/g"             /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
        sed -i "s/D7P D7S D7D D6P D6S D6D OAM/ALL/g"             /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
        sed -i "s/^_AUTOPILOT=NO/_AUTOPILOT=YES/g"               /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
        sed -i "s/^_DNS_SETUP_TEST=YES/_DNS_SETUP_TEST=NO/g"     /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
        sed -i "s/^_STRONG_PASSWORDS=NO/_STRONG_PASSWORDS=YES/g" /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
      fi
    fi
    if [ ! -e "$_UP_CONTRIB_PID" ] ; then
      sed -i "s/^_O_CONTRIB_UP=NO/_O_CONTRIB_UP=YES/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
      sed -i "s/^_O_CONTRIB_UP=NO/_O_CONTRIB_UP=YES/g" /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
    else
      sed -i "s/^_O_CONTRIB_UP=YES/_O_CONTRIB_UP=NO/g" /var/backups/OCTOPUS.sh.$_THIS_HM_USER &> /dev/null
      sed -i "s/^_O_CONTRIB_UP=YES/_O_CONTRIB_UP=NO/g" /root/.$_THIS_HM_USER.octopus.cnf &> /dev/null
    fi
    if [ -e "/var/backups/OCTOPUS.sh.$_THIS_HM_USER" ] ; then
      if [ -e "$User/log/up-$_TODAY" ] && [ -z "$mcmode" ] ; then
        echo
        echo "This Aegir Instance is already up to date!"
        echo "If you wish to run/force the upgrade again,"
        echo "please specify desired upgrade mode:"
        echo "aegir, platforms or both - as shown below"
        echo
        echo "Usage: $(basename "$0") $cmmand $second {aegir|platforms|both}"
        echo
      else
        up_mode
      fi
    else
      echo "OCTOPUS.sh.txt installer not available - try again"
      exit 1
    fi
  fi
}

up_action_all ()
{
  for User in `find /data/disk/ -maxdepth 1 | sort`
  do
    NOW_LOAD=`awk '{print $1*100}' /proc/loadavg`
    CTL_LOAD=1888
    if [ -d "$User/config/server_master/nginx/vhost.d" ] && [ -e "$User/log/cores.txt" ] && [ ! -e "$User/log/CANCELLED" ] ; then
      if [ $NOW_LOAD -lt $CTL_LOAD ]; then
        _THIS_HM_USER=`echo $User | cut -d'/' -f4 | awk '{ print $1}'`
        echo load is $NOW_LOAD while maxload is $CTL_LOAD
        echo Octopus upgrade for User $User
        n=$((RANDOM%9+2))
        echo waiting $n sec
        sleep $n
        if [ "$silent" = "log" ] ; then
          sed -i "s/^_SPINNER=YES/_SPINNER=NO/g" /var/backups/OCTOPUS.sh.txt &> /dev/null
          _UP_LOG="$_LOG_DIR/$(basename "$0")-up-$_THIS_HM_USER-$_NOW.log"
          up_one >>$_UP_LOG 2>&1
          check_report
        else
          up_one
        fi
        n=$((RANDOM%9+2))
        echo waiting $n sec
        sleep $n
        rm -f /var/backups/OCTOPUS.sh.$_THIS_HM_USER
        echo Done for $User
        if [ ! -e "$_UP_CONTRIB_PID" ] ; then
          touch $_UP_CONTRIB_PID
        fi
      else
        echo load is $NOW_LOAD while maxload is $CTL_LOAD
        echo ...we have to wait...
      fi
      echo
      echo
    fi
  done
}

up_action_one ()
{
  User="/data/disk/$second"
  NOW_LOAD=`awk '{print $1*100}' /proc/loadavg`
  CTL_LOAD=1888
  if [ -d "$User/config/server_master/nginx/vhost.d" ] && [ -e "$User/log/cores.txt" ] && [ ! -e "$User/log/CANCELLED" ] ; then
    if [ $NOW_LOAD -lt $CTL_LOAD ]; then
      _THIS_HM_USER=`echo $User | cut -d'/' -f4 | awk '{ print $1}'`
      echo load is $NOW_LOAD while maxload is $CTL_LOAD
      echo Octopus upgrade for User $User
      sleep 3
      if [ "$silent" = "log" ] ; then
        sed -i "s/^_SPINNER=YES/_SPINNER=NO/g" /var/backups/OCTOPUS.sh.txt &> /dev/null
        _UP_LOG="$_LOG_DIR/$(basename "$0")-up-$_THIS_HM_USER-$_NOW.log"
        up_one >>$_UP_LOG 2>&1
        check_report
      else
        up_one
      fi
      sleep 3
      rm -f /var/backups/OCTOPUS.sh.$_THIS_HM_USER
      echo Done for $User
      if [ ! -e "$_UP_CONTRIB_PID" ] ; then
        touch $_UP_CONTRIB_PID
      fi
    else
      echo load is $NOW_LOAD while maxload is $CTL_LOAD
      echo try again later
    fi
    echo
    echo
  fi
}

up_start ()
{
  if test -f /var/run/boa_run.pid ; then
    echo Another BOA installer is running probably - /var/run/boa_run.pid exists
    exit 1
  elif test -f /var/run/boa_wait.pid ; then
    echo Some important system task is running probably - /var/run/boa_wait.pid exists
    exit 1
  else
    touch /var/run/boa_run.pid
    touch /var/run/boa_wait.pid
    mkdir -p $_LOG_DIR
    cd /var/backups
    rm -f /var/backups/OCTOPUS.sh*
  fi
  if [ "$cmmode" = "log" ] ; then
    silent="$cmmode"
  fi
  if [ ! -z "$cmmode" ] && [ "$cmmode" != "log" ] ; then
    mcmode="$cmmode"
  fi
}

up_finish ()
{
  rm -f /var/run/boa_run.pid
  rm -f /var/run/boa_wait.pid
  rm -f /var/backups/OCTOPUS.sh*
  rm -f /root/BOA.sh*
  echo
  echo OCTOPUS upgrade completed
  echo Bye
  exit 0
}

up_head ()
{
  up_start
  curl -s -A iCab "https://raw.github.com/omega8cc/nginx-for-drupal/master/OCTOPUS.sh.txt" -o OCTOPUS.sh.txt
  if [ "$second" = "all" ] ; then
    up_action_all
  else
    up_action_one
  fi
  up_finish
}

up_stable ()
{
  up_start
  wget -q -U iCab http://files.aegir.cc/versions/OCTOPUS.sh.txt
  if [ "$second" = "all" ] ; then
    up_action_all
  else
    up_action_one
  fi
  up_finish
}

download_wrapper ()
{
  if [ ! -e "$_THIS_FILE" ] ; then
    echo "I can not connect to github.com at the moment"
    echo "I will try again in 15 seconds, please wait..."
    sleep 15
    curl -s -A iCab "https://raw.github.com/omega8cc/nginx-for-drupal/master/aegir/tools/bin/$(basename "$0")" -o $_THIS_FILE
  fi
}

check_wrapper ()
{
  mkdir -p /var/backups
  rm -f /var/backups/$(basename "$0")-now-*
  _THIS_FILE="/var/backups/$(basename "$0")-now-$_NOW"
  curl -s -A iCab "https://raw.github.com/omega8cc/nginx-for-drupal/master/aegir/tools/bin/$(basename "$0")" -o $_THIS_FILE
  if [ ! -e "$_THIS_FILE" ] ; then
    download_wrapper
    if [ ! -e "$_THIS_FILE" ] ; then
      download_wrapper
      if [ ! -e "$_THIS_FILE" ] ; then
        download_wrapper
        if [ ! -e "$_THIS_FILE" ] ; then
          echo "Sorry, I gave up."
          echo "Please check https://status.github.com and try again later."
          exit 1
        fi
      fi
    fi
  fi
  echo "### $_TODAY ###" >> $_THIS_FILE
  _DATE_TEST=$(grep "### $_TODAY ###" $_THIS_FILE)
  if [[ "$_DATE_TEST" =~ "### $_TODAY ###" ]] ; then
    true
  else
    bash /var/backups/$(basename "$0")-now-$_NOW $*
  fi
}

check_dns_curl ()
{
  if [ ! -e "/etc/resolv.conf" ] ; then
    echo "nameserver 8.8.8.8" >/etc/resolv.conf
    echo "nameserver 8.8.4.4" >>/etc/resolv.conf
  else
    _RESOLV_TEST=$(grep "nameserver" /etc/resolv.conf)
    if [[ "$_RESOLV_TEST" =~ "nameserver" ]] ; then
    true
    else
    rm -f /etc/resolv.conf
    echo "nameserver 8.8.8.8" >/etc/resolv.conf
    echo "nameserver 8.8.4.4" >>/etc/resolv.conf
    fi
  fi
  _CURL_TEST=$(curl -s -I "http://files.aegir.cc")
  if [[ "$_CURL_TEST" =~ "200 OK" ]] ; then
    true
  else
    apt-get clean -qq &> /dev/null
    apt-get update -qq &> /dev/null
    apt-get install curl -y --force-yes --reinstall &> /dev/null
  fi
}

check_root ()
{
  if [ `whoami` = "root" ] ; then
    chmod a+w /dev/null
    sed -i "s/.*173.231.133.190.*//g" /etc/hosts &> /dev/null
    sed -i "/^$/d" /etc/hosts &> /dev/null
  else
    echo "ERROR: This script should be ran as a root user - please `sudo -i` first"
    exit 1
  fi
}

case "$1" in
  up-stable) cmmand="$1"
             second="$2"
             cmmode="$3"
             silent="$4"
             check_root
             check_dns_curl
             check_wrapper
             up_stable
  ;;
  up-head)   cmmand="$1"
             second="$2"
             cmmode="$3"
             silent="$4"
             check_root
             check_dns_curl
             check_wrapper
             up_head
  ;;
  *)         echo
             echo "Usage: $(basename "$0") {up-stable|up-head} {all|o1} {aegir|platforms|both}"
             echo
             exit 1
  ;;
esac
