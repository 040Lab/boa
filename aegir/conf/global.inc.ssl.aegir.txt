<?php # global settings.php

error_reporting(0); // disable reporting errors by default - enable later only for "dev" subdomains

$conf['page_compression'] = 0;    // required for Nginx, since it already compresses everything
$conf['boost_crawl_on_cron'] = 0; // deny Boost crawler
$conf['cron_safe_threshold'] = 0; // disable cron in d7, since Aegir runs scheduled cron for sites
$conf['preprocess_css'] = 1;      // enable hardcoded css aggregation
$conf['preprocess_js'] = 1;       // enable hardcoded js aggregation
$conf['cache'] = 1;               // enable hardcoded caching
$conf['error_level'] = 0;         // disable errors on screen
$conf['statistics_enable_access_log'] = 0; // disable access log stats

if (file_exists('./modules/o_contrib/advagg/advagg.module')) {
  unset($conf['preprocess_css']); // disable hardcoded css aggregation
  unset($conf['preprocess_js']);  // disable hardcoded js aggregation
  $conf['advagg_enabled'] = 1;
  $conf['advagg_async_generation'] = 1;
  $conf['advagg_gzip_compression'] = 1;
  $conf['advagg_checksum_mode'] = "md5";
  $conf['advagg_debug'] = 0;
  $conf['advagg_dir_htaccess'] = 0;
  $conf['advagg_rebuild_on_flush'] = 0;
}

ini_set('session.cookie_lifetime', 172800); // set it to 48 hours max
ini_set('session.cache_expire', 172800);    // set it also to 48 hours max
ini_set('session.gc_maxlifetime', 172800);  // set it also to 48 hours max
// Improve sessions management if module session_expire and/or Pressflow core is not used.
// It is already enabled in the php.ini, but we are forcing it here, just in case.
ini_set('session.gc_probability', 1);
ini_set('session.gc_divisor', 1000);

if (preg_match("/hostmaster/", $conf['install_profile']) && isset($_SERVER['HTTP_USER_AGENT'])) {
  $request_type = ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') ? 'SSL' : 'NONSSL';
  if ($request_type != "SSL" && !preg_match("/cron\.php/", $_SERVER['REQUEST_URI'])) { // we force secure connection here
    header("HTTP/1.1 301 Moved Permanently");
    header("Location: https://" . $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI']);
  }
  $conf['hosting_ignore_default_profiles'] = 1;
  $conf['hosting_require_disable_before_delete'] = 0;
  unset($conf['cache']); // disable hardcoded caching
  ini_set('session.cookie_lifetime', 0); // force log-out on browser quit
}

// http://drupal.org/node/912682#comment-3503636
if (preg_match("/managingnews/", $conf['install_profile'])) {
   ini_set('auto_detect_line_endings', TRUE);
}

if (isset($_SERVER['HTTP_HOST']) && preg_match("/dev/", $_SERVER['HTTP_HOST']) && isset($_SERVER['HTTP_USER_AGENT'])) {
   error_reporting(E_ALL);
   ini_set('display_errors', TRUE);
   ini_set('display_startup_errors', TRUE);
   unset($conf['cache']);          // disable hardcoded caching
   unset($conf['preprocess_css']); // disable hardcoded css aggregation
   unset($conf['preprocess_js']);  // disable hardcoded js aggregation
   unset($conf['error_level']);    // disable hardcoded no errors on screen
   unset($conf['advagg_async_generation']); // disable hardcoded value
   unset($conf['advagg_gzip_compression']); // disable hardcoded value
   unset($conf['advagg_checksum_mode']);    // disable hardcoded value
   unset($conf['advagg_debug']);            // disable hardcoded value
   unset($conf['advagg_dir_htaccess']);     // disable hardcoded value
   unset($conf['advagg_rebuild_on_flush']); // disable hardcoded value
   unset($conf['advagg_enabled']);          // disable hardcoded value
}

if (isset($_SERVER['HTTP_HOST'])) {
  if (isset($_SERVER['HTTP_X_FORWARDED_PROTO'])) {
    $request_type = ($_SERVER['HTTP_X_FORWARDED_PROTO'] == 'https') ? 'SSL' : 'NONSSL';
    if ($request_type == "SSL") { // we check for secure connection to set correct base_url
      $base_url = 'https://' . $_SERVER['HTTP_HOST'];
      if (!preg_match("/hostmaster/", $conf['install_profile'])) {
        ini_set('session.cookie_secure', 1);
        $_SERVER['HTTPS'] = 'on';
      }
    }
    else {
      $base_url = 'http://' . $_SERVER['HTTP_HOST'];
    }
  }
  else {
    $base_url = 'http://' . $_SERVER['HTTP_HOST'];
  }
  if (isset($_SERVER['REQUEST_TIME']) && isset($_SERVER['REMOTE_ADDR']) && isset($_SERVER['HTTP_USER_AGENT'])) {
    $identity = $_SERVER['REQUEST_TIME'] . $_SERVER['REMOTE_ADDR'] . $_SERVER['HTTP_HOST'] . $_SERVER['HTTP_USER_AGENT'];
    $identity = 'BOND'. md5("$identity");
    if (preg_match("/(?:standard|minimal|testing|openpublic|commerce)/", $conf['install_profile'])) {
      $sess_prefix = ini_get('session.cookie_secure') ? 'SSESS' : 'SESS';
      $test_sess_name = $sess_prefix . substr(hash('sha256', $cookie_domain), 0, 32);
    }
    else {
      $test_sess_name = 'SESS'. md5($cookie_domain);
    }

    if (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) || preg_match("/(?:hostmaster|uberdrupal|commerce)/", $conf['install_profile']) ||
        preg_match("/^\/(?:user|admin)/", $_SERVER['REQUEST_URI']) || file_exists('sites/all/modules/ubercart/README.txt')) {
      header('X-Accel-Expires: 0');
      if (isset($_COOKIE[$test_sess_name]) && !isset($_COOKIE[OctopusNoCacheID])) {
        $lifetime = '0';
        setcookie('OctopusNoCacheID', $identity, $_SERVER['REQUEST_TIME'] + ($lifetime + 60), '/', $cookie_domain);
      }
      elseif (isset($_COOKIE[$test_sess_name]) && isset($_COOKIE[OctopusNoCacheID])) {
        $loggedinactive = 'YES';
      }
    }
    elseif (isset($_COOKIE[$test_sess_name]) && !isset($_COOKIE[OctopusCacheID])) {
      $lifetime = '600';
      setcookie('OctopusCacheID', $identity, $_SERVER['REQUEST_TIME'] + ($lifetime + 300), '/', $cookie_domain);
      header('X-Accel-Expires: 300');
    }
    elseif (isset($_COOKIE[$test_sess_name]) && isset($_COOKIE[OctopusCacheID])) {
      $loggedinactive = 'YES';
      header('X-Accel-Expires: 300');
    }
    else {
      $loggedinactive = 'NO';
    }
  }
}

// don't use it for d7 profiles and for php-cli
if (!preg_match("/(?:standard|minimal|testing|commerce|openpublic)/", $conf['install_profile']) && isset($_SERVER['HTTP_USER_AGENT']) &&
    !preg_match("/(?:cron\.php)/", $_SERVER['REQUEST_URI'])) {
  if (isset($_SERVER['HTTP_HOST']) && !preg_match("/dev/", $_SERVER['HTTP_HOST'])) {
     $conf['securepages_enable'] = 1;  // force securepages_enable to avoid issues with SSL proxy
     if (file_exists('./modules/o_contrib/cache/cache.inc') && isset($_COOKIE[$test_sess_name]) && isset($_SERVER['HTTP_COOKIE']) && preg_match("/(?:OctopusCacheID|OctopusNoCacheID)/", $_SERVER['HTTP_COOKIE'])) {
     $conf['cache_inc'] = './modules/o_contrib/cache/cache.inc';
     $conf['cache_settings'] = array(
      'engines' => array(
        'redis-engine' => array(
          'engine' => 'redis',
          'server' => array('127.0.0.1:6379'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-a' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11211'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-b' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11212'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-c' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11213'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-d' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11214'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-e' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11215'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-f' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11216'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-g' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11217'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'memcache-engine-h' => array(
          'engine' => 'memcached',
          'server' => array('127.0.0.1:11218'),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
        'db-engine' => array(
          'engine' => 'database',
          'server' => array(),
          'shared' => TRUE,
          'prefix' => $_SERVER['HTTP_HOST'],
        ),
      ),
      'schemas' => array(
        'memcache-a-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-a',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-b-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-b',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-c-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-c',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-d-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-d',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-e-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-e',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-f-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-f',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-g-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-g',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-h-redis-db-schema' => array(
          // Primary cache.
          'memcache-engine-h',
          // Secondary cache.
          'redis-engine',
          // Secondary cache.
          'db-engine',
        ),
        'redis-db-schema' => array(
          // Primary cache.
          'redis-engine',
          // Secondary cache.
          //'memcache-engine-f',
          // Secondary cache.
          'db-engine',
        ),
        'memcache-db-schema' => array(
          // Primary cache.
          'memcache-engine-h',
          // Secondary cache.
          'db-engine',
        ),
      ),
      'bins' => array(
        // Bin name           => Schema name.
        'default'             => 'memcache-a-redis-db-schema',
        'cache'               => 'redis-db-schema',
        'cache_form'          => 'memcache-b-redis-db-schema',
        'cache_filter'        => 'memcache-c-redis-db-schema',
        'cache_path_alias'    => 'memcache-db-schema',
        'cache_path_source'   => 'memcache-db-schema',
        'cache_path'          => 'redis-db-schema',
        'cache_update'        => 'memcache-d-redis-db-schema',
        'cache_block'         => 'memcache-e-redis-db-schema',
        'cache_content'       => 'redis-db-schema',
        'cache_menu'          => 'memcache-g-redis-db-schema',
        'cache_page'          => 'redis-db-schema',
        'cache_views_data'    => 'memcache-h-redis-db-schema',
        'cache_views'         => 'memcache-h-redis-db-schema',
        'views_object_cache'  => 'memcache-h-redis-db-schema',
      ),
    );
    } // end of if (file_exists('./modules/o_contrib/cache/cache.inc'))
  } // end of if (!preg_match("/(dev)/", $_SERVER['HTTP_HOST'])
} // end of if (!preg_match("/(standard)|(minimal)/", $conf['install_profile']))

/**
 * Drupal for Facebook (fb)
 *
 * Important:
 * Facebook client libraries will not work properly if arg_separator.output is not &.
 * The default value is &amp;. Change this in settings.php. Make the value "&"
 * http://drupal.org/node/205476
 */
if (file_exists('sites/all/modules/fb/fb_settings.inc')) {
  ini_set('arg_separator.output',     '&');
  require_once "sites/all/modules/fb/fb_settings.inc";
  $conf['fb_api_file'] = "sites/all/modules/fb/facebook-platform/php/facebook.php";
}

/**
 * Domain module
 *
 */
if (file_exists('sites/all/modules/domain/settings.inc')) {
  require_once "sites/all/modules/domain/settings.inc";
}

